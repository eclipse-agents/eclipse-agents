<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.mcp" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.mcp" id="modelContextProtocolServer" name="Model Context Protocol Server"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
The &lt;code&gt;org.eclipse.mcp.modelContextProtocolServer&lt;/code&gt; extension point is used to declare and instantiate &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts&quot;&gt;Model Context Protocol Servers, Tools and Resources&lt;/a&gt; that run within the IDE&apos;s Process and expose IDE functionality for interaction with Agents and/or Developers.
&lt;/p&gt;&lt;p&gt;
Behind the scenes, declared MCP Servers will be instantiated using the modelcontextprotocol/java-sdk API and may be configured to serve over HTTP using Jetty.
&lt;/p&gt;&lt;p&gt;
A &quot;Platform MCP Servers&quot; preference page will let users:
&lt;ul&gt;
  &lt;li&gt;Customize Servers&lt;/li&gt;
  &lt;li&gt;Customize a Server&apos;s Tools and Resource Managers&lt;/li&gt;
 &lt;ul&gt;
    &lt;li&gt; Add / Remove&lt;/li&gt;
    &lt;li&gt; Enable / Disable&lt;/li&gt;
    &lt;li&gt; Customize name and description to suit an Agentic scenario&lt;/li&gt;
    &lt;li&gt; Custom property pages for specific tools and resource managers&lt;/li&gt;
   &lt;/ul&gt;
&lt;/ul&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="tool"/>
            <element ref="toolFactory"/>
            <element ref="resourceController"/>
            <element ref="server"/>
            <element ref="category"/>
            <element ref="toolServerBinding"/>
            <element ref="resourceControllerServerBinding"/>
         </sequence>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="tool">
      <annotation>
         <documentation>
            This element is used to define a &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts#tools-ai-actions&quot;&gt;Model Context Protocol Tool&lt;/a&gt;
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="propertyPage"/>
         </sequence>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  The description of this MCP tool that is shared with MCP clients
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of this tool
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of this MCP tool that is shared with MCP clients
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="schema" type="string" use="required">
            <annotation>
               <documentation>
                  The JSON schema this tool takes as input argument
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of the AbstractTool implemention.  Must implement &lt;tt&gt;org.eclipse.mcp.IMCPTool&lt;/tt&gt; and have an zero-parameter constructor.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.mcp.IMCPTool"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="categoryId" type="string">
            <annotation>
               <documentation>
                  the unique identifier of the category for this tool
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.mcp/category/@id"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="toolFactory">
      <annotation>
         <documentation>
            A convenience/alternative for generating one or more &lt;code&gt;tool&lt;code&gt; elements from a class with Annotated methods.  The factory must implement &lt;code&gt;org.eclipse.mcp.IMCPToolFactory.&lt;/code&gt; and use the method annotations &lt;code&gt;org.eclipse.mcp.IMCPToolFactory.Tool&lt;/code&gt; and the method argument annoation &lt;code&gt;org.eclipse.mcp.IMCPToolFactory.ToolArg&lt;/code&gt; on each method they would like to expose as a  &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts#tools-ai-actions&quot;&gt;Model Context Protocol Tools&lt;/a&gt;

Example:
&lt;pre&gt;
@Tool (id = &quot;foo.bar.helloWorld&quot;, 
	description = &quot;Greets user with a hello&quot;, 
	name = &quot;e4-hello-world&quot;,
	categoryId = &quot;foo.bar.categoryId&quot;,
	propertyPageIds = { &quot;foo.bar.propertyPage1&quot;, &quot;foo.bar.propertyPage1&quot;})
public String[] helloWorld(
	@ToolArg(name = &quot;firstName&quot;, description = &quot;First name&quot;) String firstName,
	@ToolArg(name = &quot;age&quot;, description = &quot;User&apos;s age&quot;, required = false) Integer age,
	@ToolArg(name = &quot;address&quot;, description = &quot;User&apos;s address&quot;, required = false) String[] address) {	
		return new String[] { &quot;Hello &quot; + firstName };
	}
&lt;/pre&gt;
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of the IMCPToolFactory implemention.  Must implement &lt;tt&gt;org.eclipse.mcp.IMCPTooFactoryl&lt;/tt&gt; and have an zero-parameter constructor.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.mcp.IMCPToolFactory"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="resourceController">
      <annotation>
         <documentation>
            This element is used to define a controller that may dynamically create and remove &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts#resources-context-data&quot;&gt;Model Context Protocol Resources&lt;/a&gt; from the server.
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="propertyPage"/>
         </sequence>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  The description of this MCP resource controller
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of this resource manager
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  The name of this MCP resource controller
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The fully qualified name of the IMCPResourceController implemention.  Must implement &lt;tt&gt;org.eclipse.mcp.IMCPResourceController&lt;/tt&gt; and have an zero-parameter constructor.  Resource Controllers are responsible for dynamically adding and removing resources and translating a url to string content
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.mcp.IMCPresourceController"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="categoryId" type="string">
            <annotation>
               <documentation>
                  the unique identifier of the category for this resource controller
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.mcp/category/@id"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="server">
      <annotation>
         <documentation>
            This element declares a &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts&quot;&gt;Model Context Protocol Server&lt;/a&gt; that may serve a collection of &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts#tools-ai-actions&quot;&gt;Model Context Protocol Tools&lt;/a&gt;  and  &lt;a href=&quot;https://modelcontextprotocol.io/docs/learn/server-concepts#resources-context-data&quot;&gt;Model Context Protocol Resources&lt;/a&gt; and make them available within the the IDE Process or over HTTP.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="description" type="string">
            <annotation>
               <documentation>
                  a translatable short description of this server for display in the UI
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of this server
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the translatable name of this server for display in the UI
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="version" type="string" use="required">
            <annotation>
               <documentation>
                  the version of this server for display in the logs
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="defaultPort" type="string" use="required">
            <annotation>
               <documentation>
                  The default port to be used if this server exposes its tools on a localhost http server
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="category">
      <annotation>
         <documentation>
            This element allows one to define a category for Tools, Resource Managers
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of this category
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the translatable name of this category for display in the UI
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="toolServerBinding">
      <annotation>
         <documentation>
            This element allows one to bind tool to a server
         </documentation>
      </annotation>
      <complexType>
         <attribute name="toolId" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of the activity to bind
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.mcp/tool/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="serverId" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of the server to bind
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.mcp/server/@id"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="resourceControllerServerBinding">
      <annotation>
         <documentation>
            This element allows one to bind a Resource Controller to a Server
         </documentation>
      </annotation>
      <complexType>
         <attribute name="resourceControllerId" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of the activity to bind
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.mcp/resourceController/@id"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="serverId" type="string" use="required">
            <annotation>
               <documentation>
                  the unique identifier of the server to bind
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier" basedOn="org.eclipse.mcp/server/@id"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="propertyPage">
      <annotation>
         <documentation>
            Specify an optional custom propertyPage to let the user customize the behavior of a tool or resource.
    your class should implement org.eclipse.ui.dialogs.PropertyPage
    you can load and save preferences from the input object, which is an instance of org.eclipse.mcp.IMCPElementPropertyInput
 
 &lt;extension point=&quot;org.eclipse.ui.propertyPages&quot;&gt;
    &lt;page name=&quot;My Page Name&quot;
         class=&quot;com.foo.bar.MyPropertyPage&quot;
         id=&quot;com.foo.bar.MyPropertyPage.ID&quot;&gt;
         &lt;enabledWhen&gt;
             &lt;instanceof
                 value=&quot;org.eclipse.mcp.IMCPElementPropertyInput&quot;&gt;
             &lt;/instanceof&gt;
         &lt;/enabledWhen&gt;
   &lt;/page&gt;
 &lt;/extension&gt;
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  the identifier of an &apos;org.eclipse.ui.propertyPages&apos; extension that will enable for input of interface IMCPElementPropertyInput
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
3.0
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         The following is an example of several activity and category definitions as well as associated bindings.
&lt;p&gt;
&lt;pre&gt;
  &lt;extension
         point=&quot;org.eclipse.mcp.modelContextProtocolServer&quot;
         id=&quot;com.foo.bar.mcp&quot;
         name=&quot;My MCP Contributions&quot;&gt;
      &lt;category
            id=&quot;com.foo.bar.category&quot;
            name=&quot;My Cateogry&quot;&gt;
      &lt;/category&gt;
      &lt;server
            description=&quot;My first MCP server&quot;
            id=&quot;com.foo.bar.server&quot;
            name=&quot;My MCP Server&quot;
            version=&quot;1.0.0&quot;
            defaultPort=&quot;12932&quot;&gt;
      &lt;/server&gt;
      &lt;tool
            categoryId=&quot;com.foo.bar.category&quot;
            class=&quot;com.foo.bar.tools.MyMCPTool&quot;
            description=&quot;LLM Tooling will read this to understand how to invoke my tool&quot;
            id=&quot;com.foo.bar.tools.MyMCPToolId&quot;
            name=&quot;foo-myTool&quot;
            schema=&quot;my XML escaped JSON schema declaring the inputs into my tool&quot;&gt;
         &lt;propertyPage
               id=&quot;com.foo.bar.tools.myPropertyPageId1&quot;&gt;
         &lt;/propertyPage&gt;
         &lt;propertyPage
               id=&quot;com.foo.bar.tools.myPropertyPageId2&quot;&gt;
         &lt;/propertyPage&gt;
      &lt;/tool&gt;
      &lt;toolServerBinding
            serverId=&quot;com.foo.bar.server&quot;
            toolId=&quot;com.foo.bar.tools.MyMCPToolId&quot;&gt;
      &lt;/toolServerBinding&gt;
      &lt;toolFactory
            class=&quot;com.foo.bar.tools.MyMCPToolFactory&quot;
      &lt;/toolFactory&gt;
      &lt;toolServerBinding
            serverId=&quot;com.foo.bar.server&quot;
            toolId=&quot;com.foo.bar.tools.MyMCPToolFromFactoryId&quot;&gt;
      &lt;/toolServerBinding&gt;
      &lt;resourceController
            class=&quot;com.foo.bar.tools.MyMCPResourceController&quot;
            id=&quot;com.foo.bar.tools.MyMCPResourceControllerId&quot;
            name=&quot;foo-myController&quot;
            description=&quot;Adds and removes resources dynamically to/from server&quot;
            categoryId=&quot;com.foo.bar.category&quot;&gt;
            &lt;propertyPage
               id=&quot;com.foo.bar.tools.myPropertyPageId3&quot;&gt;
            &lt;/propertyPage&gt;
      &lt;/resourceController&gt;
      &lt;resourceControllerServerBinding
            serverId=&quot;com.foo.bar.server&quot;
            resourceControllerId=&quot;com.foo.bar.tools.MyMCPResourceControllerId&quot;&gt;
      &lt;/resourceControllerServerBinding&gt;
   &lt;/extension&gt;
&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiInfo"/>
      </appinfo>
      <documentation>
         &lt;p&gt;
See the java docs for &lt;code&gt;org.eclipse.mcp&lt;/code&gt; for java interface documentationm
&lt;/p&gt;&lt;p&gt;
Two tracing options are available on the General &gt; Tracing preference page
&lt;ul&gt;
&lt;li&gt;
# Main Debug Trace switch
&lt;ul&gt;&lt;li&gt;org.eclipse.mcp/debug&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;&lt;li&gt;
# Trace location for implementations
&lt;ul&gt;&lt;li&gt;org.eclipse.mcp/debug/implementations&lt;/li&gt;&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
      </documentation>
   </annotation>


   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2025 IBM Corporation and others.&lt;br&gt;

This program and the accompanying materials are made
available under the terms of the Eclipse Public License 2.0 which accompanies
this distribution, and is available at &lt;a 
href=&quot;https://www.eclipse.org/legal/epl-2.0&quot;&gt;https://www.eclipse.org/legal/epl-v20.html&lt;/a&gt;/

SPDX-License-Identifier: EPL-2.0
      </documentation>
   </annotation>

</schema>
