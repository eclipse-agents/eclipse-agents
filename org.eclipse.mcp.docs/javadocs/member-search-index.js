memberSearchIndex = [{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"_default()"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"_new(AcpSchema.NewSessionRequest)","u":"_new(org.eclipse.mcp.acp.protocol.AcpSchema.NewSessionRequest)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"AbstractDynamicToolbarDropdown(String, String, AcpView)","u":"%3Cinit%3E(java.lang.String,java.lang.String,org.eclipse.mcp.acp.view.AcpView)"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"AbstractService()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Action","l":"ACCEPT"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"ACCEPT"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.CancelNotification)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.CancelNotification)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.CancelNotification)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.CancelNotification)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.CreateTerminalRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.CreateTerminalRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.CreateTerminalResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.CreateTerminalResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.KillTerminalCommandRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.KillTerminalCommandRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.KillTerminalCommandRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.KillTerminalCommandRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.KillTerminalCommandResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.KillTerminalCommandResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.KillTerminalCommandResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.KillTerminalCommandResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.PromptRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.PromptRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.PromptRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.PromptRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.PromptResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.PromptResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.PromptResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.PromptResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.ReadTextFileRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReadTextFileRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.ReadTextFileRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReadTextFileRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.ReadTextFileResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReadTextFileResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.ReadTextFileResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReadTextFileResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.ReleaseTerminalRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReleaseTerminalRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.ReleaseTerminalRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReleaseTerminalRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.ReleaseTerminalResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReleaseTerminalResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.ReleaseTerminalResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.ReleaseTerminalResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.RequestPermissionRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.RequestPermissionRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.RequestPermissionResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.RequestPermissionResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.SessionNotification)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.SessionNotification)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.SessionNotification)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.SessionNotification)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.SetSessionModeRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.SetSessionModeRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.SetSessionModeRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.SetSessionModeRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.SetSessionModeResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.SetSessionModeResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.SetSessionModeResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.SetSessionModeResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.TerminalOutputRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.TerminalOutputRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.TerminalOutputRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.TerminalOutputRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.TerminalOutputResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.TerminalOutputResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.TerminalOutputResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.TerminalOutputResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.WaitForTerminalExitRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WaitForTerminalExitRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.WaitForTerminalExitRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WaitForTerminalExitRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.WaitForTerminalExitResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WaitForTerminalExitResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.WaitForTerminalExitResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WaitForTerminalExitResponse)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.WriteTextFileRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WriteTextFileRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.WriteTextFileRequest)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WriteTextFileRequest)"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"accept(AcpSchema.WriteTextFileResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WriteTextFileResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"accept(AcpSchema.WriteTextFileResponse)","u":"accept(org.eclipse.mcp.acp.protocol.AcpSchema.WriteTextFileResponse)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"accept(McpSchema.JSONRPCNotification)","u":"accept(io.modelcontextprotocol.spec.McpSchema.JSONRPCNotification)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"accept(McpSchema.JSONRPCResponse)","u":"accept(io.modelcontextprotocol.spec.McpSchema.JSONRPCResponse)"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncMcpLoggingMethodCallback","l":"accept(McpSchema.LoggingMessageNotification)","u":"accept(io.modelcontextprotocol.spec.McpSchema.LoggingMessageNotification)"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncMcpProgressMethodCallback","l":"accept(McpSchema.ProgressNotification)","u":"accept(io.modelcontextprotocol.spec.McpSchema.ProgressNotification)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"acceptPromptRequest(AcpSchema.PromptRequest)","u":"acceptPromptRequest(org.eclipse.mcp.acp.protocol.AcpSchema.PromptRequest)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"acceptSessionAgentMessageChunk(AcpSchema.ContentBlock)","u":"acceptSessionAgentMessageChunk(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"acceptSessionAgentThoughtChunk(AcpSchema.ContentBlock)","u":"acceptSessionAgentThoughtChunk(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"acceptSessionToolCall(String, String, String, String)","u":"acceptSessionToolCall(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"acceptSessionToolCallUpdate(String, String)","u":"acceptSessionToolCallUpdate(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"acceptSessionUserMessageChunk(AcpSchema.ContentBlock)","u":"acceptSessionUserMessageChunk(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock)"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"ACP"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"ACP"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"AcpBrowser(Composite, int)","u":"%3Cinit%3E(org.eclipse.swt.widgets.Composite,int)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"AcpClient(IAgentService)","u":"%3Cinit%3E(org.eclipse.mcp.acp.agent.IAgentService)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientLauncher","l":"AcpClientLauncher(IAcpClient, InputStream, OutputStream)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.IAcpClient,java.io.InputStream,java.io.OutputStream)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientThread","l":"AcpClientThread(AcpClientLauncher)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpClientLauncher)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpContexts","l":"AcpContexts(Composite, int)","u":"%3Cinit%3E(org.eclipse.swt.widgets.Composite,int)"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"AcpGeneralPreferencePage()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema","l":"AcpSchema()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchemaTypeAdapters","l":"AcpSchemaTypeAdapters()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"AcpSessionModel(IAgentService, String, String, AcpSchema.McpServer[], AcpSchema.SessionModeState)","u":"%3Cinit%3E(org.eclipse.mcp.acp.agent.IAgentService,java.lang.String,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.McpServer[],org.eclipse.mcp.acp.protocol.AcpSchema.SessionModeState)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"AcpView()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"action()"},{"p":"org.eclipse.mcp","c":"Activator","l":"Activator()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"activityManagerChanged(ActivityManagerEvent)","u":"activityManagerChanged(org.eclipse.ui.activities.ActivityManagerEvent)"},{"p":"org.eclipse.mcp","c":"Activator","l":"addAccessibilityData(Control, String, String)","u":"addAccessibilityData(org.eclipse.swt.widgets.Control,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"addAcpListener(IAcpSessionListener)","u":"addAcpListener(org.eclipse.mcp.acp.IAcpSessionListener)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"addCloseListener(Chips.CloseListener)","u":"addCloseListener(org.eclipse.mcp.acp.view.Chips.CloseListener)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSession","l":"addConnection(CONNECTION)"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"addConnection(Disposable)","u":"addConnection(reactor.core.Disposable)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"addContent(McpSchema.Content)","u":"addContent(io.modelcontextprotocol.spec.McpSchema.Content)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"addContext(Object)","u":"addContext(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpContexts","l":"addEmbeddedResourceContext(String, String)","u":"addEmbeddedResourceContext(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"addEnvVar(String, String)","u":"addEnvVar(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"addHint(String)","u":"addHint(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"additionalProperties()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpContexts","l":"addLinkedResourceContext(String, String)","u":"addLinkedResourceContext(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"addListener(int, Listener)","u":"addListener(int,org.eclipse.swt.widgets.Listener)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"addPrompt(McpServerFeatures.AsyncPromptSpecification)","u":"addPrompt(io.modelcontextprotocol.server.McpServerFeatures.AsyncPromptSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"addPrompt(McpServerFeatures.SyncPromptSpecification)","u":"addPrompt(io.modelcontextprotocol.server.McpServerFeatures.SyncPromptSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"addPrompt(McpStatelessServerFeatures.AsyncPromptSpecification)","u":"addPrompt(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncPromptSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"addPrompt(McpStatelessServerFeatures.SyncPromptSpecification)","u":"addPrompt(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncPromptSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"addResource(McpServerFeatures.AsyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpServerFeatures.AsyncResourceSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"addResource(McpServerFeatures.SyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpServerFeatures.SyncResourceSpecification)"},{"p":"org.eclipse.mcp","c":"IMCPServices","l":"addResource(McpServerFeatures.SyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpServerFeatures.SyncResourceSpecification)"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"addResource(McpServerFeatures.SyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpServerFeatures.SyncResourceSpecification)"},{"p":"org.eclipse.mcp.internal","c":"MCPServices","l":"addResource(McpServerFeatures.SyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpServerFeatures.SyncResourceSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"addResource(McpStatelessServerFeatures.AsyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncResourceSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"addResource(McpStatelessServerFeatures.SyncResourceSpecification)","u":"addResource(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncResourceSpecification)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"addRoot(McpSchema.Root)","u":"addRoot(io.modelcontextprotocol.spec.McpSchema.Root)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"addRoot(McpSchema.Root)","u":"addRoot(io.modelcontextprotocol.spec.McpSchema.Root)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"addSelectionListener(SelectionListener)","u":"addSelectionListener(org.eclipse.swt.events.SelectionListener)"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"addServerListener(ServerManager.IServerListener)","u":"addServerListener(org.eclipse.mcp.internal.ServerManager.IServerListener)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"addTextContent(String)","u":"addTextContent(java.lang.String)"},{"p":"org.eclipse.mcp.acp.view.actions","c":"AddToChatAction","l":"AddToChatAction(ExecutionEvent)","u":"%3Cinit%3E(org.eclipse.core.commands.ExecutionEvent)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"addTool(McpServerFeatures.AsyncToolSpecification)","u":"addTool(io.modelcontextprotocol.server.McpServerFeatures.AsyncToolSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"addTool(McpServerFeatures.SyncToolSpecification)","u":"addTool(io.modelcontextprotocol.server.McpServerFeatures.SyncToolSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"addTool(McpStatelessServerFeatures.AsyncToolSpecification)","u":"addTool(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncToolSpecification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"addTool(McpStatelessServerFeatures.SyncToolSpecification)","u":"addTool(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncToolSpecification)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"agentCapabilities()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"AgentCapabilities(Map<String, Object>, Boolean, AcpSchema.McpCapabilities, AcpSchema.PromptCapabilities)","u":"%3Cinit%3E(java.util.Map,java.lang.Boolean,org.eclipse.mcp.acp.protocol.AcpSchema.McpCapabilities,org.eclipse.mcp.acp.protocol.AcpSchema.PromptCapabilities)"},{"p":"org.eclipse.mcp.internal.preferences","c":"AgentGeneralPreferencePage","l":"AgentGeneralPreferencePage()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"agentNotifies(AcpSchema.AgentNotification)","u":"agentNotifies(org.eclipse.mcp.acp.protocol.AcpSchema.AgentNotification)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"agentRequests(AcpSchema.AgentRequest)","u":"agentRequests(org.eclipse.mcp.acp.protocol.AcpSchema.AgentRequest)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"agentResponds(AcpSchema.AgentResponse)","u":"agentResponds(org.eclipse.mcp.acp.protocol.AcpSchema.AgentResponse)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"ALERT"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.ContextInclusionStrategy","l":"ALL_SERVERS"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotated","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContent","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"annotations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"annotations()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool","l":"annotations()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotations","l":"Annotations(List<McpSchema.Role>, Double)","u":"%3Cinit%3E(java.util.List,java.lang.Double)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"Annotations(Map<String, Object>, AcpSchema.Role[], String, Double)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Role[],java.lang.String,java.lang.Double)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"annotations(McpSchema.Annotations)","u":"annotations(io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"annotations(McpSchema.Annotations)","u":"annotations(io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"annotations(McpSchema.ToolAnnotations)","u":"annotations(io.modelcontextprotocol.spec.McpSchema.ToolAnnotations)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"APPLICATION_JSON"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"APPLICATION_JSON"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"APPLICATION_JSON"},{"p":"org.springaicommunity.mcp.method.tool","c":"AsyncMcpToolMethodCallback","l":"apply(McpAsyncServerExchange, McpSchema.CallToolRequest)","u":"apply(io.modelcontextprotocol.server.McpAsyncServerExchange,io.modelcontextprotocol.spec.McpSchema.CallToolRequest)"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncMcpCompleteMethodCallback","l":"apply(McpAsyncServerExchange, McpSchema.CompleteRequest)","u":"apply(io.modelcontextprotocol.server.McpAsyncServerExchange,io.modelcontextprotocol.spec.McpSchema.CompleteRequest)"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncMcpPromptMethodCallback","l":"apply(McpAsyncServerExchange, McpSchema.GetPromptRequest)","u":"apply(io.modelcontextprotocol.server.McpAsyncServerExchange,io.modelcontextprotocol.spec.McpSchema.GetPromptRequest)"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncMcpResourceMethodCallback","l":"apply(McpAsyncServerExchange, McpSchema.ReadResourceRequest)","u":"apply(io.modelcontextprotocol.server.McpAsyncServerExchange,io.modelcontextprotocol.spec.McpSchema.ReadResourceRequest)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncMcpSamplingMethodCallback","l":"apply(McpSchema.CreateMessageRequest)","u":"apply(io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncMcpSamplingMethodCallback","l":"apply(McpSchema.CreateMessageRequest)","u":"apply(io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncMcpElicitationMethodCallback","l":"apply(McpSchema.ElicitRequest)","u":"apply(io.modelcontextprotocol.spec.McpSchema.ElicitRequest)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncMcpElicitationMethodCallback","l":"apply(McpSchema.ElicitRequest)","u":"apply(io.modelcontextprotocol.spec.McpSchema.ElicitRequest)"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncMcpLoggingMethodCallback","l":"apply(McpSchema.LoggingMessageNotification)","u":"apply(io.modelcontextprotocol.spec.McpSchema.LoggingMessageNotification)"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncMcpProgressMethodCallback","l":"apply(McpSchema.ProgressNotification)","u":"apply(io.modelcontextprotocol.spec.McpSchema.ProgressNotification)"},{"p":"org.springaicommunity.mcp.method.tool","c":"SyncMcpToolMethodCallback","l":"apply(McpSyncServerExchange, McpSchema.CallToolRequest)","u":"apply(io.modelcontextprotocol.server.McpSyncServerExchange,io.modelcontextprotocol.spec.McpSchema.CallToolRequest)"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncMcpCompleteMethodCallback","l":"apply(McpSyncServerExchange, McpSchema.CompleteRequest)","u":"apply(io.modelcontextprotocol.server.McpSyncServerExchange,io.modelcontextprotocol.spec.McpSchema.CompleteRequest)"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncMcpPromptMethodCallback","l":"apply(McpSyncServerExchange, McpSchema.GetPromptRequest)","u":"apply(io.modelcontextprotocol.server.McpSyncServerExchange,io.modelcontextprotocol.spec.McpSchema.GetPromptRequest)"},{"p":"org.springaicommunity.mcp.method.resource","c":"SyncMcpResourceMethodCallback","l":"apply(McpSyncServerExchange, McpSchema.ReadResourceRequest)","u":"apply(io.modelcontextprotocol.server.McpSyncServerExchange,io.modelcontextprotocol.spec.McpSchema.ReadResourceRequest)"},{"p":"org.springaicommunity.mcp.method.tool","c":"AsyncStatelessMcpToolMethodCallback","l":"apply(McpTransportContext, McpSchema.CallToolRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.CallToolRequest)"},{"p":"org.springaicommunity.mcp.method.tool","c":"SyncStatelessMcpToolMethodCallback","l":"apply(McpTransportContext, McpSchema.CallToolRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.CallToolRequest)"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncStatelessMcpCompleteMethodCallback","l":"apply(McpTransportContext, McpSchema.CompleteRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.CompleteRequest)"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncStatelessMcpCompleteMethodCallback","l":"apply(McpTransportContext, McpSchema.CompleteRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.CompleteRequest)"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncStatelessMcpPromptMethodCallback","l":"apply(McpTransportContext, McpSchema.GetPromptRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.GetPromptRequest)"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncStatelessMcpPromptMethodCallback","l":"apply(McpTransportContext, McpSchema.GetPromptRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.GetPromptRequest)"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncStatelessMcpResourceMethodCallback","l":"apply(McpTransportContext, McpSchema.ReadResourceRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.ReadResourceRequest)"},{"p":"org.springaicommunity.mcp.method.resource","c":"SyncStatelessMcpResourceMethodCallback","l":"apply(McpTransportContext, McpSchema.ReadResourceRequest)","u":"apply(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.ReadResourceRequest)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"SpringAiSchemaModule","l":"applyToConfigBuilder(SchemaGeneratorConfigBuilder)","u":"applyToConfigBuilder(com.github.victools.jsonschema.generator.SchemaGeneratorConfigBuilder)"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"arg(String)","u":"arg(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"args()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"args()"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"args(List<String>)","u":"args(java.util.List)"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"args(String...)","u":"args(java.lang.String...)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"argument()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"arguments()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteContext","l":"arguments()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"arguments()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"arguments()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"arguments(Map<String, Object>)","u":"arguments(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"arguments(String)","u":"arguments(java.lang.String)"},{"p":"org.springaicommunity.mcp.annotation","c":"CompleteAdapter","l":"asCompleteReference(McpComplete)","u":"asCompleteReference(org.springaicommunity.mcp.annotation.McpComplete)"},{"p":"org.springaicommunity.mcp.annotation","c":"CompleteAdapter","l":"asCompleteReference(McpComplete, Method)","u":"asCompleteReference(org.springaicommunity.mcp.annotation.McpComplete,java.lang.reflect.Method)"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"asInvalid(String)","u":"asInvalid(java.lang.String)"},{"p":"org.springaicommunity.mcp.annotation","c":"PromptAdaptor","l":"asPrompt(McpPrompt)","u":"asPrompt(org.springaicommunity.mcp.annotation.McpPrompt)"},{"p":"org.springaicommunity.mcp.annotation","c":"PromptAdaptor","l":"asPrompt(McpPrompt, Method)","u":"asPrompt(org.springaicommunity.mcp.annotation.McpPrompt,java.lang.reflect.Method)"},{"p":"org.springaicommunity.mcp.annotation","c":"ResourceAdaptor","l":"asResource(McpResource)","u":"asResource(org.springaicommunity.mcp.annotation.McpResource)"},{"p":"org.springaicommunity.mcp.annotation","c":"ResourceAdaptor","l":"asResourceTemplate(McpResource)","u":"asResourceTemplate(org.springaicommunity.mcp.annotation.McpResource)"},{"p":"io.modelcontextprotocol.util","c":"Assert","l":"Assert()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Role","l":"assistant"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Role","l":"ASSISTANT"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"asValid(String)","u":"asValid(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpClient","l":"async(McpClientTransport)","u":"async(io.modelcontextprotocol.spec.McpClientTransport)"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"async(McpServerTransportProvider)","u":"async(io.modelcontextprotocol.spec.McpServerTransportProvider)"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"async(McpStatelessServerTransport)","u":"async(io.modelcontextprotocol.spec.McpStatelessServerTransport)"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"async(McpStreamableServerTransportProvider)","u":"async(io.modelcontextprotocol.spec.McpStreamableServerTransportProvider)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncCompletionSpecification","l":"AsyncCompletionSpecification(McpSchema.CompleteReference, BiFunction<McpAsyncServerExchange, McpSchema.CompleteRequest, Mono<McpSchema.CompleteResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncCompletionSpecification","l":"AsyncCompletionSpecification(McpSchema.CompleteReference, BiFunction<McpTransportContext, McpSchema.CompleteRequest, Mono<McpSchema.CompleteResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,java.util.function.BiFunction)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncElicitationSpecification","l":"AsyncElicitationSpecification(String, Function<McpSchema.ElicitRequest, Mono<McpSchema.ElicitResult>>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"asyncHttpRequestCustomizer(AsyncHttpRequestCustomizer)","u":"asyncHttpRequestCustomizer(io.modelcontextprotocol.client.transport.AsyncHttpRequestCustomizer)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"asyncHttpRequestCustomizer(AsyncHttpRequestCustomizer)","u":"asyncHttpRequestCustomizer(io.modelcontextprotocol.client.transport.AsyncHttpRequestCustomizer)"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncLoggingSpecification","l":"AsyncLoggingSpecification(String, Function<McpSchema.LoggingMessageNotification, Mono<Void>>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function)"},{"p":"org.springaicommunity.mcp.provider.elicitation","c":"AsyncMcpElicitationProvider","l":"AsyncMcpElicitationProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.logging","c":"AsyncMcpLoggingProvider","l":"AsyncMcpLoggingProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.progress","c":"AsyncMcpProgressProvider","l":"AsyncMcpProgressProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.sampling","c":"AsyncMcpSamplingProvider","l":"AsyncMcpSamplingProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.method.tool","c":"AsyncMcpToolMethodCallback","l":"AsyncMcpToolMethodCallback(ReturnMode, Method, Object)","u":"%3Cinit%3E(org.springaicommunity.mcp.method.tool.ReturnMode,java.lang.reflect.Method,java.lang.Object)"},{"p":"org.springaicommunity.mcp.provider.tool","c":"AsyncMcpToolProvider","l":"AsyncMcpToolProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncProgressSpecification","l":"AsyncProgressSpecification(String, Function<McpSchema.ProgressNotification, Mono<Void>>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncPromptSpecification","l":"AsyncPromptSpecification(McpSchema.Prompt, BiFunction<McpAsyncServerExchange, McpSchema.GetPromptRequest, Mono<McpSchema.GetPromptResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Prompt,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncPromptSpecification","l":"AsyncPromptSpecification(McpSchema.Prompt, BiFunction<McpTransportContext, McpSchema.GetPromptRequest, Mono<McpSchema.GetPromptResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Prompt,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncResourceSpecification","l":"AsyncResourceSpecification(McpSchema.Resource, BiFunction<McpAsyncServerExchange, McpSchema.ReadResourceRequest, Mono<McpSchema.ReadResourceResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Resource,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncResourceSpecification","l":"AsyncResourceSpecification(McpSchema.Resource, BiFunction<McpTransportContext, McpSchema.ReadResourceRequest, Mono<McpSchema.ReadResourceResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Resource,java.util.function.BiFunction)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncSamplingSpecification","l":"AsyncSamplingSpecification(String, Function<McpSchema.CreateMessageRequest, Mono<McpSchema.CreateMessageResult>>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"AsyncSpecification()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.provider.complete","c":"AsyncStatelessMcpCompleteProvider","l":"AsyncStatelessMcpCompleteProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.prompt","c":"AsyncStatelessMcpPromptProvider","l":"AsyncStatelessMcpPromptProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.resource","c":"AsyncStatelessMcpResourceProvider","l":"AsyncStatelessMcpResourceProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.method.tool","c":"AsyncStatelessMcpToolMethodCallback","l":"AsyncStatelessMcpToolMethodCallback(ReturnMode, Method, Object)","u":"%3Cinit%3E(org.springaicommunity.mcp.method.tool.ReturnMode,java.lang.reflect.Method,java.lang.Object)"},{"p":"org.springaicommunity.mcp.provider.tool","c":"AsyncStatelessMcpToolProvider","l":"AsyncStatelessMcpToolProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"AsyncToolSpecification(McpSchema.Tool, BiFunction<McpAsyncServerExchange, Map<String, Object>, Mono<McpSchema.CallToolResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"AsyncToolSpecification(McpSchema.Tool, BiFunction<McpAsyncServerExchange, Map<String, Object>, Mono<McpSchema.CallToolResult>>, BiFunction<McpAsyncServerExchange, McpSchema.CallToolRequest, Mono<McpSchema.CallToolResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"AsyncToolSpecification(McpSchema.Tool, BiFunction<McpTransportContext, McpSchema.CallToolRequest, Mono<McpSchema.CallToolResult>>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotations","l":"audience()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"audience()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"audience()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"audience()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"audience()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"audio()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"AudioBlock(Map<String, Object>, AcpSchema.Annotations, String, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"AudioContent(Map<String, Object>, AcpSchema.Annotations[], String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations[],java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"AudioContent(McpSchema.Annotations, String, String)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"AudioContent(McpSchema.Annotations, String, String, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,java.lang.String,java.lang.String,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"authenticate(AcpSchema.AuthenticateRequest)","u":"authenticate(org.eclipse.mcp.acp.protocol.AcpSchema.AuthenticateRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateRequest","l":"AuthenticateRequest(Map<String, Object>, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateResponse","l":"AuthenticateResponse(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"AuthMethod(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"authMethods()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"AvailableCommand(Map<String, Object>, String, AcpSchema.AvailableCommandInput, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.AvailableCommandInput,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommandInput","l":"AvailableCommandInput(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"availableModels()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"availableModes()"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"awaitForExit()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"BAD_REQUEST"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"baseUrl(String)","u":"baseUrl(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback.ContentType","l":"BLOB"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"blob()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"blob()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"BlobResourceContents(Map<String, Object>, String, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"BlobResourceContents(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"BlobResourceContents(String, String, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.Map)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"Bookmark"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"build()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"build()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"build()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"build()"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SingleSessionAsyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SingleSessionSyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StreamableServerAsyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StreamableSyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpError.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"build()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"build()"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncMcpCompleteMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncStatelessMcpCompleteMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncMcpCompleteMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncStatelessMcpCompleteMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncMcpElicitationMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncMcpElicitationMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncMcpLoggingMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncMcpLoggingMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncMcpProgressMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncMcpProgressMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncMcpPromptMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncStatelessMcpPromptMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncMcpPromptMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncStatelessMcpPromptMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncMcpResourceMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncStatelessMcpResourceMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.resource","c":"SyncMcpResourceMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.resource","c":"SyncStatelessMcpResourceMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncMcpSamplingMethodCallback.Builder","l":"build()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncMcpSamplingMethodCallback.Builder","l":"build()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"builder()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"builder()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"builder()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"builder()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"builder()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"builder()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"builder()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"builder()"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncMcpCompleteMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncStatelessMcpCompleteMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncMcpCompleteMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncStatelessMcpCompleteMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncMcpElicitationMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncMcpElicitationMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncMcpLoggingMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncMcpLoggingMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncMcpProgressMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncMcpProgressMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncMcpPromptMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncStatelessMcpPromptMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncMcpPromptMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncStatelessMcpPromptMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncMcpResourceMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncStatelessMcpResourceMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.resource","c":"SyncMcpResourceMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.resource","c":"SyncStatelessMcpResourceMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncMcpSamplingMethodCallback","l":"builder()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncMcpSamplingMethodCallback","l":"builder()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncMcpCompleteMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.complete","c":"AsyncStatelessMcpCompleteMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncMcpCompleteMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.complete","c":"SyncStatelessMcpCompleteMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncMcpElicitationMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncMcpElicitationMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncMcpLoggingMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncMcpLoggingMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncMcpProgressMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncMcpProgressMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncMcpPromptMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AsyncStatelessMcpPromptMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncMcpPromptMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.prompt","c":"SyncStatelessMcpPromptMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncMcpResourceMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AsyncStatelessMcpResourceMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncMcpSamplingMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncMcpSamplingMethodCallback.Builder","l":"Builder()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpError","l":"builder(int)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"builder(String)","u":"builder(java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"builder(String)","u":"builder(java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters","l":"builder(String)","u":"builder(java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"Builder(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"Builder(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler","l":"builder(Supplier<Flux<McpSession>>)","u":"builder(java.util.function.Supplier)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"call()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"call()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"callHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"callHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"callHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"callHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification.Builder","l":"callHandler(BiFunction<McpAsyncServerExchange, McpSchema.CallToolRequest, Mono<McpSchema.CallToolResult>>)","u":"callHandler(java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification.Builder","l":"callHandler(BiFunction<McpSyncServerExchange, McpSchema.CallToolRequest, McpSchema.CallToolResult>)","u":"callHandler(java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification.Builder","l":"callHandler(BiFunction<McpTransportContext, McpSchema.CallToolRequest, McpSchema.CallToolResult>)","u":"callHandler(java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification.Builder","l":"callHandler(BiFunction<McpTransportContext, McpSchema.CallToolRequest, Mono<McpSchema.CallToolResult>>)","u":"callHandler(java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"callTool(McpSchema.CallToolRequest)","u":"callTool(io.modelcontextprotocol.spec.McpSchema.CallToolRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"callTool(McpSchema.CallToolRequest)","u":"callTool(io.modelcontextprotocol.spec.McpSchema.CallToolRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"CallToolRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"CallToolRequest(String, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"CallToolRequest(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"CallToolResult(List<McpSchema.Content>, Boolean)","u":"%3Cinit%3E(java.util.List,java.lang.Boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"CallToolResult(List<McpSchema.Content>, Boolean, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.Boolean,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"CallToolResult(List<McpSchema.Content>, Boolean, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.Boolean,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"CallToolResult(String, Boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.Boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Action","l":"CANCEL"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"cancel(AcpSchema.CancelNotification)","u":"cancel(org.eclipse.mcp.acp.protocol.AcpSchema.CancelNotification)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"cancelled"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CancelNotification","l":"CancelNotification(Map<String, Object>, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"capabilities()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"capabilities()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"capabilities(McpSchema.ClientCapabilities)","u":"capabilities(io.modelcontextprotocol.spec.McpSchema.ClientCapabilities)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"capabilities(McpSchema.ClientCapabilities)","u":"capabilities(io.modelcontextprotocol.spec.McpSchema.ClientCapabilities)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"capabilities(McpSchema.ServerCapabilities)","u":"capabilities(io.modelcontextprotocol.spec.McpSchema.ServerCapabilities)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"capabilities(McpSchema.ServerCapabilities)","u":"capabilities(io.modelcontextprotocol.spec.McpSchema.ServerCapabilities)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"capabilities(McpSchema.ServerCapabilities)","u":"capabilities(io.modelcontextprotocol.spec.McpSchema.ServerCapabilities)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"capabilities(McpSchema.ServerCapabilities)","u":"capabilities(io.modelcontextprotocol.spec.McpSchema.ServerCapabilities)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"changeEditorText(String, ResourceSchema.TextReplacement[])","u":"changeEditorText(java.lang.String,org.eclipse.mcp.platform.resource.ResourceSchema.TextReplacement[])"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"charEnd()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"charStart()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.DEPTH","l":"CHILDREN"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Children","l":"children()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Children","l":"Children(T[], ResourceSchema.DEPTH)","u":"%3Cinit%3E(T[],org.eclipse.mcp.platform.resource.ResourceSchema.DEPTH)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"Chips(Composite, int)","u":"%3Cinit%3E(org.eclipse.swt.widgets.Composite,int)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"ClassUtils()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"clear()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpContexts","l":"clearAcpContexts()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultJsonSchemaValidator","l":"clearCache()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"clientBuilder(HttpClient.Builder)","u":"clientBuilder(java.net.http.HttpClient.Builder)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"clientBuilder(HttpClient.Builder)","u":"clientBuilder(java.net.http.HttpClient.Builder)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"clientCapabilities()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"ClientCapabilities(Map<String, Object>, AcpSchema.FileSystemCapability, boolean)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.FileSystemCapability,boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"ClientCapabilities(Map<String, Object>, McpSchema.ClientCapabilities.RootCapabilities, McpSchema.ClientCapabilities.Sampling, McpSchema.ClientCapabilities.Elicitation)","u":"%3Cinit%3E(java.util.Map,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities.RootCapabilities,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities.Sampling,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities.Elicitation)"},{"p":"org.springaicommunity.mcp.annotation","c":"McpElicitation","l":"clientId()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpLogging","l":"clientId()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpProgress","l":"clientId()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpSampling","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncElicitationSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncElicitationSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncLoggingSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncLoggingSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncProgressSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncProgressSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncSamplingSpecification","l":"clientId()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncSamplingSpecification","l":"clientId()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"clientInfo()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"clientInfo(McpSchema.Implementation)","u":"clientInfo(io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"clientInfo(McpSchema.Implementation)","u":"clientInfo(io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"clientNotifies(AcpSchema.ClientNotification)","u":"clientNotifies(org.eclipse.mcp.acp.protocol.AcpSchema.ClientNotification)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"clientRequests(AcpSchema.ClientRequest)","u":"clientRequests(org.eclipse.mcp.acp.protocol.AcpSchema.ClientRequest)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"clientResponds(AcpSchema.ClientResponse)","u":"clientResponds(org.eclipse.mcp.acp.protocol.AcpSchema.ClientResponse)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"close()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"close()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"close()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"close()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"close()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerTransportProviderBase","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpSession","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpStatelessServerTransport","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerTransportProvider","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransport","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSession","l":"close()"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"close()"},{"p":"org.eclipse.mcp.acp.protocol","c":"StdinoutMessageProducer","l":"close()"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"closeEditor(String)","u":"closeEditor(java.lang.String)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips.CloseEvent","l":"CloseEvent(Event)","u":"%3Cinit%3E(org.eclipse.swt.widgets.Event)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerTransportProviderBase","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpStatelessServerTransport","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerTransportProvider","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransport","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"closeGracefully()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"code()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"command()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"command()"},{"p":"org.eclipse.mcp.acp.view","c":"CommandHandler","l":"CommandHandler()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAvailableCommandsUpdate","l":"commands()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteArgument","l":"CompleteArgument(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"CompleteCompletion(List<String>, Integer, Boolean)","u":"%3Cinit%3E(java.util.List,java.lang.Integer,java.lang.Boolean)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"completeCompletion(McpSchema.CompleteRequest)","u":"completeCompletion(io.modelcontextprotocol.spec.McpSchema.CompleteRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"completeCompletion(McpSchema.CompleteRequest)","u":"completeCompletion(io.modelcontextprotocol.spec.McpSchema.CompleteRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteContext","l":"CompleteContext(Map<String, String>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryStatus","l":"completed"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallStatus","l":"completed"},{"p":"org.eclipse.mcp.platform","c":"ResaourceTemplates","l":"completeName(McpSchema.CompleteRequest.CompleteArgument)","u":"completeName(io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteArgument)"},{"p":"org.eclipse.mcp.platform","c":"ResaourceTemplates","l":"completeRelativePath(McpSchema.CompleteRequest.CompleteArgument, McpSchema.CompleteRequest.CompleteContext)","u":"completeRelativePath(io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteArgument,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteContext)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"CompleteRequest(McpSchema.CompleteReference, McpSchema.CompleteRequest.CompleteArgument)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteArgument)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"CompleteRequest(McpSchema.CompleteReference, McpSchema.CompleteRequest.CompleteArgument, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteArgument,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"CompleteRequest(McpSchema.CompleteReference, McpSchema.CompleteRequest.CompleteArgument, Map<String, Object>, McpSchema.CompleteRequest.CompleteContext)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteArgument,java.util.Map,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteContext)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"CompleteRequest(McpSchema.CompleteReference, McpSchema.CompleteRequest.CompleteArgument, McpSchema.CompleteRequest.CompleteContext)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteArgument,io.modelcontextprotocol.spec.McpSchema.CompleteRequest.CompleteContext)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"CompleteResult(McpSchema.CompleteResult.CompleteCompletion)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteResult.CompleteCompletion)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"CompleteResult(McpSchema.CompleteResult.CompleteCompletion, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteResult.CompleteCompletion,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"completion()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.CompletionCapabilities","l":"CompletionCapabilities()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncCompletionSpecification","l":"completionHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncCompletionSpecification","l":"completionHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncCompletionSpecification","l":"completionHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncCompletionSpecification","l":"completionHandler()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"completions()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"completions()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"completions(List<McpServerFeatures.AsyncCompletionSpecification>)","u":"completions(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"completions(List<McpServerFeatures.SyncCompletionSpecification>)","u":"completions(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"completions(List<McpStatelessServerFeatures.AsyncCompletionSpecification>)","u":"completions(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"completions(List<McpStatelessServerFeatures.SyncCompletionSpecification>)","u":"completions(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"completions(McpServerFeatures.AsyncCompletionSpecification...)","u":"completions(io.modelcontextprotocol.server.McpServerFeatures.AsyncCompletionSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"completions(McpServerFeatures.SyncCompletionSpecification...)","u":"completions(io.modelcontextprotocol.server.McpServerFeatures.SyncCompletionSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"completions(McpStatelessServerFeatures.AsyncCompletionSpecification...)","u":"completions(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncCompletionSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"completions(McpStatelessServerFeatures.SyncCompletionSpecification...)","u":"completions(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncCompletionSpecification...)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"computeSize(int, int, boolean)","u":"computeSize(int,int,boolean)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap(int)","u":"%3Cinit%3E(int)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap(int, ConcurrentReferenceHashMap.ReferenceType)","u":"%3Cinit%3E(int,org.springaicommunity.mcp.method.tool.utils.ConcurrentReferenceHashMap.ReferenceType)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap(int, float)","u":"%3Cinit%3E(int,float)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap(int, float, int)","u":"%3Cinit%3E(int,float,int)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap(int, float, int, ConcurrentReferenceHashMap.ReferenceType)","u":"%3Cinit%3E(int,float,int,org.springaicommunity.mcp.method.tool.utils.ConcurrentReferenceHashMap.ReferenceType)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"ConcurrentReferenceHashMap(int, int)","u":"%3Cinit%3E(int,int)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"connect(Function<Mono<McpSchema.JSONRPCMessage>, Mono<McpSchema.JSONRPCMessage>>)","u":"connect(java.util.function.Function)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"connect(Function<Mono<McpSchema.JSONRPCMessage>, Mono<McpSchema.JSONRPCMessage>>)","u":"connect(java.util.function.Function)"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"connect(Function<Mono<McpSchema.JSONRPCMessage>, Mono<McpSchema.JSONRPCMessage>>)","u":"connect(java.util.function.Function)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientTransport","l":"connect(Function<Mono<McpSchema.JSONRPCMessage>, Mono<McpSchema.JSONRPCMessage>>)","u":"connect(java.util.function.Function)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"Console(String, String, Object)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"ConsoleAdapter()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"ConsoleAdapter(IConsole)","u":"%3Cinit%3E(org.eclipse.ui.console.IConsole)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"ConsoleAdapter(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Consoles","l":"consoles()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Consoles","l":"Consoles(ResourceSchema.Console[])","u":"%3Cinit%3E(org.eclipse.mcp.platform.resource.ResourceSchema.Console[])"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportStream","l":"consumeSseStream(Publisher<Tuple2<Optional<String>, Iterable<McpSchema.JSONRPCMessage>>>)","u":"consumeSseStream(org.reactivestreams.Publisher)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportStream","l":"consumeSseStream(Publisher<Tuple2<Optional<String>, Iterable<McpSchema.JSONRPCMessage>>>)","u":"consumeSseStream(org.reactivestreams.Publisher)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"containsKey(Object)","u":"containsKey(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"content()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"content()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"content()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptMessage","l":"content()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SamplingMessage","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileResponse","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentMessageChunk","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentThoughtChunk","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionUserMessageChunk","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentContent","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"content()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"content()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"content(List<McpSchema.Content>)","u":"content(java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Builder","l":"content(Map<String, Object>)","u":"content(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"content(McpSchema.Content)","u":"content(io.modelcontextprotocol.spec.McpSchema.Content)"},{"p":"org.eclipse.mcp.acp.view","c":"ContentAssistAdapter","l":"ContentAssistAdapter(Text)","u":"%3Cinit%3E(org.eclipse.swt.widgets.Text)"},{"p":"org.eclipse.mcp.acp.view","c":"ContentAssistProvider","l":"ContentAssistProvider()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"contents()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback","l":"contentType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"context()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport.Builder","l":"contextExtractor(McpTransportContextExtractor<HttpServletRequest>)","u":"contextExtractor(io.modelcontextprotocol.server.McpTransportContextExtractor)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"contextExtractor(McpTransportContextExtractor<HttpServletRequest>)","u":"contextExtractor(io.modelcontextprotocol.server.McpTransportContextExtractor)"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"Contributor(IConfigurationElement)","u":"%3Cinit%3E(org.eclipse.core.runtime.IConfigurationElement)"},{"p":"org.springaicommunity.mcp.method.resource","c":"DefaultMcpReadResourceResultConverter","l":"convertToReadResourceResult(Object, String, String, AbstractMcpResourceMethodCallback.ContentType)","u":"convertToReadResourceResult(java.lang.Object,java.lang.String,java.lang.String,org.springaicommunity.mcp.method.resource.AbstractMcpResourceMethodCallback.ContentType)"},{"p":"org.springaicommunity.mcp.method.resource","c":"McpReadResourceResultConverter","l":"convertToReadResourceResult(Object, String, String, AbstractMcpResourceMethodCallback.ContentType)","u":"convertToReadResourceResult(java.lang.Object,java.lang.String,java.lang.String,org.springaicommunity.mcp.method.resource.AbstractMcpResourceMethodCallback.ContentType)"},{"p":"io.modelcontextprotocol.server","c":"DefaultMcpTransportContext","l":"copy()"},{"p":"io.modelcontextprotocol.server","c":"McpTransportContext","l":"copy()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"costPriority()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"costPriority(Double)","u":"costPriority(java.lang.Double)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"CREATE_MESSAGE_REQUEST_TYPE_REF"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession.Factory","l":"create(McpServerTransport)","u":"create(io.modelcontextprotocol.spec.McpServerTransport)"},{"p":"io.modelcontextprotocol.util","c":"DeafaultMcpUriTemplateManagerFactory","l":"create(String)","u":"create(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"McpUriTemplateManagerFactory","l":"create(String)","u":"create(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema","l":"createEliciationRequestSchema(Map<String, Object>, String[])","u":"createEliciationRequestSchema(java.util.Map,java.lang.String[])"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"createElicitation(McpSchema.ElicitRequest)","u":"createElicitation(io.modelcontextprotocol.spec.McpSchema.ElicitRequest)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"createElicitation(McpSchema.ElicitRequest)","u":"createElicitation(io.modelcontextprotocol.spec.McpSchema.ElicitRequest)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"createMessage(McpSchema.CreateMessageRequest)","u":"createMessage(io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"createMessage(McpSchema.CreateMessageRequest)","u":"createMessage(io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"CreateMessageRequest(List<McpSchema.SamplingMessage>, McpSchema.ModelPreferences, String, McpSchema.CreateMessageRequest.ContextInclusionStrategy, Double, int, List<String>, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,io.modelcontextprotocol.spec.McpSchema.ModelPreferences,java.lang.String,io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest.ContextInclusionStrategy,java.lang.Double,int,java.util.List,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"CreateMessageRequest(List<McpSchema.SamplingMessage>, McpSchema.ModelPreferences, String, McpSchema.CreateMessageRequest.ContextInclusionStrategy, Double, int, List<String>, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,io.modelcontextprotocol.spec.McpSchema.ModelPreferences,java.lang.String,io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest.ContextInclusionStrategy,java.lang.Double,int,java.util.List,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"CreateMessageResult(McpSchema.Role, McpSchema.Content, String, McpSchema.CreateMessageResult.StopReason)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Role,io.modelcontextprotocol.spec.McpSchema.Content,java.lang.String,io.modelcontextprotocol.spec.McpSchema.CreateMessageResult.StopReason)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"CreateMessageResult(McpSchema.Role, McpSchema.Content, String, McpSchema.CreateMessageResult.StopReason, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Role,io.modelcontextprotocol.spec.McpSchema.Content,java.lang.String,io.modelcontextprotocol.spec.McpSchema.CreateMessageResult.StopReason,java.util.Map)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"createPartControl(Composite)","u":"createPartControl(org.eclipse.swt.widgets.Composite)"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"createProcess()"},{"p":"org.eclipse.mcp.acp.agent","c":"GeminiService","l":"createProcess()"},{"p":"org.eclipse.mcp.acp.agent","c":"GooseService","l":"createProcess()"},{"p":"org.eclipse.mcp","c":"IFactoryProvider","l":"createResourceTemplates()"},{"p":"org.eclipse.mcp.platform","c":"FactoryProvider","l":"createResourceTemplates()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"CreateTerminalRequest(Map<String, Object>, String[], String, String, AcpSchema.EnvVariable, Integer, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String[],java.lang.String,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.EnvVariable,java.lang.Integer,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalResponse","l":"CreateTerminalResponse(Map<String, Object>, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"creationTime()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"CRITICAL"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"currentModeId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeUpdate","l":"currentModeId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"currentModelId()"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"currentSelection()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"cursor()"},{"p":"io.modelcontextprotocol.client.transport","c":"AsyncHttpRequestCustomizer","l":"customize(HttpRequest.Builder, String, URI, String)","u":"customize(java.net.http.HttpRequest.Builder,java.lang.String,java.net.URI,java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"AsyncHttpRequestCustomizer.Noop","l":"customize(HttpRequest.Builder, String, URI, String)","u":"customize(java.net.http.HttpRequest.Builder,java.lang.String,java.net.URI,java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"SyncHttpRequestCustomizer","l":"customize(HttpRequest.Builder, String, URI, String)","u":"customize(java.net.http.HttpRequest.Builder,java.lang.String,java.net.URI,java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"customizeClient(Consumer<HttpClient.Builder>)","u":"customizeClient(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"customizeClient(Consumer<HttpClient.Builder>)","u":"customizeClient(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"customizeRequest(Consumer<HttpRequest.Builder>)","u":"customizeRequest(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"customizeRequest(Consumer<HttpRequest.Builder>)","u":"customizeRequest(java.util.function.Consumer)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"cwd()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"cwd()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"cwd()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"data()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"data()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"data()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"data()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"data()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"data()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"data()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"data()"},{"p":"io.modelcontextprotocol.spec","c":"McpError.Builder","l":"data(Object)","u":"data(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification.Builder","l":"data(String)","u":"data(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"DeafaultMcpUriTemplateManagerFactory","l":"DeafaultMcpUriTemplateManagerFactory()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"DEBUG"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"DEBUG"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"DEBUG"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Action","l":"DECLINE"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"DEFAULT_BASE_URL"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"DEFAULT_SERVER_INFO"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"DEFAULT_SSE_ENDPOINT"},{"p":"io.modelcontextprotocol.spec","c":"DefaultJsonSchemaValidator","l":"DefaultJsonSchemaValidator()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultJsonSchemaValidator","l":"DefaultJsonSchemaValidator(ObjectMapper)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"org.springaicommunity.mcp.method.resource","c":"DefaultMcpReadResourceResultConverter","l":"DefaultMcpReadResourceResultConverter()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpStreamableServerSessionFactory","l":"DefaultMcpStreamableServerSessionFactory(Duration, McpStreamableServerSession.InitRequestHandler, Map<String, McpRequestHandler<?>>, Map<String, McpNotificationHandler>)","u":"%3Cinit%3E(java.time.Duration,io.modelcontextprotocol.spec.McpStreamableServerSession.InitRequestHandler,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"DefaultMcpTransportContext","l":"DefaultMcpTransportContext()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"DefaultMcpTransportSession(Function<String, Publisher<Void>>)","u":"%3Cinit%3E(java.util.function.Function)"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportStream","l":"DefaultMcpTransportStream(boolean, Function<McpTransportStream<CONNECTION>, Publisher<CONNECTION>>)","u":"%3Cinit%3E(boolean,java.util.function.Function)"},{"p":"io.modelcontextprotocol.util","c":"DefaultMcpUriTemplateManager","l":"DefaultMcpUriTemplateManager(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"definitions()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"defs()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"delete"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"delete()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Children","l":"depthSearched()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContent","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"description()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"description()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"description()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"description()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"description()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"description()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"description()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpArg","l":"description()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpPrompt","l":"description()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpResource","l":"description()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool","l":"description()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpToolParam","l":"description()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"description(String)","u":"description(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"description(String)","u":"description(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"description(String)","u":"description(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"deserializeJsonRpcMessage(ObjectMapper, String)","u":"deserializeJsonRpcMessage(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"destroy()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"destroy()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"destroy()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"destructiveHint()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool.McpAnnotations","l":"destructiveHint()"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"disableTracing"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"disallowDelete(boolean)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"dispose()"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"dispose()"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"dispose()"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"dispose()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips.CloseEvent","l":"doit"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"done()"},{"p":"org.eclipse.mcp.internal","c":"Startup","l":"earlyStartup()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"edit"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"editor()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextEditorSelection","l":"editor()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"Editor(String, McpSchema.ResourceLink, McpSchema.ResourceLink, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpSchema.ResourceLink,io.modelcontextprotocol.spec.McpSchema.ResourceLink,boolean,boolean)"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"EditorAdapter()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"EditorAdapter(IEditorReference)","u":"%3Cinit%3E(org.eclipse.ui.IEditorReference)"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"EditorAdapter(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editors","l":"editors()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editors","l":"Editors(ResourceSchema.Editor[])","u":"%3Cinit%3E(org.eclipse.mcp.platform.resource.ResourceSchema.Editor[])"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Builder","l":"elicitation()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"elicitation()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Elicitation","l":"Elicitation()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"elicitation(Function<McpSchema.ElicitRequest, McpSchema.ElicitResult>)","u":"elicitation(java.util.function.Function)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"elicitation(Function<McpSchema.ElicitRequest, Mono<McpSchema.ElicitResult>>)","u":"elicitation(java.util.function.Function)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"ElicitationChoice(String, String, String, String[], String[], String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncElicitationSpecification","l":"elicitationHandler()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncElicitationSpecification","l":"elicitationHandler()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"ElicitRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"ElicitRequest(String, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"ElicitResult(McpSchema.ElicitResult.Action, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.ElicitResult.Action,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"ElicitResult(McpSchema.ElicitResult.Action, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.ElicitResult.Action,java.util.Map,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"embeddedContext()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"EmbeddedResource(List<McpSchema.Role>, Double, McpSchema.ResourceContents)","u":"%3Cinit%3E(java.util.List,java.lang.Double,io.modelcontextprotocol.spec.McpSchema.ResourceContents)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"EmbeddedResource(Map<String, Object>, AcpSchema.Annotations, AcpSchema.EmbeddedResourceResource)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,org.eclipse.mcp.acp.protocol.AcpSchema.EmbeddedResourceResource)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"EmbeddedResource(McpSchema.Annotations, McpSchema.ResourceContents)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,io.modelcontextprotocol.spec.McpSchema.ResourceContents)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"EmbeddedResource(McpSchema.Annotations, McpSchema.ResourceContents, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,io.modelcontextprotocol.spec.McpSchema.ResourceContents,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"EmbeddedResourceBlock(Map<String, Object>, AcpSchema.Annotations, AcpSchema.EmbeddedResourceResource, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,org.eclipse.mcp.acp.protocol.AcpSchema.EmbeddedResourceResource,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"EMERGENCY"},{"p":"io.modelcontextprotocol.server","c":"McpTransportContext","l":"EMPTY"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"end_turn"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.StopReason","l":"END_TURN"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"endLine()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"ENDPOINT_EVENT_TYPE"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"ENDPOINT_EVENT_TYPE"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"endpoint(String)","u":"endpoint(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Plan","l":"entries()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"entries()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"entrySet()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"enumNames()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"enums()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"env()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"env()"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters.Builder","l":"env(Map<String, String>)","u":"env(java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"EnvVariable(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncCompletionSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncPromptSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncResourceSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncCompletionSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncPromptSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncResourceSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncCompletionSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncPromptSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncResourceSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncCompletionSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncPromptSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncResourceSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotations","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Elicitation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.RootCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Sampling","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteArgument","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteContext","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelHint","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptMessage","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SamplingMessage","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.CompletionCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.LoggingCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.PromptCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ResourceCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ToolCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SetLevelRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionInit","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommandInput","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CancelNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Plan","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionOutcome","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentMessageChunk","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentThoughtChunk","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAvailableCommandsUpdate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeUpdate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionUserMessageChunk","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentContent","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentTerminal","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileResponse","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Children","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Consoles","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editors","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Problems","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Tasks","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextEditorSelection","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.annotation","c":"McpMeta","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncElicitationSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncElicitationSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncLoggingSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncLoggingSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncProgressSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncProgressSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncSamplingSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncSamplingSpecification","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"ERROR"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.SEVERITY","l":"ERROR"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"error()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ErrorCodes","l":"ErrorCodes()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"errorMessage()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"execute"},{"p":"org.eclipse.mcp.acp.view","c":"CommandHandler","l":"execute(ExecutionEvent)","u":"execute(org.eclipse.core.commands.ExecutionEvent)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"exitCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"exitCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"exitStatus()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"experimental()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"experimental()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Builder","l":"experimental(Map<String, Object>)","u":"experimental(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"experimental(Map<String, Object>)","u":"experimental(java.util.Map)"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager","l":"ExtensionManager()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp","c":"IMCPServices","l":"EXTENSIONS_TRACE_OPTION"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"EXTENTIONS"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"EXTENTIONS"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodRequest","l":"ExtMethodRequest()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodResponse","l":"ExtMethodResponse()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtNotification","l":"ExtNotification()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpTransportContextExtractor","l":"extract(T, McpTransportContext)","u":"extract(T,io.modelcontextprotocol.server.McpTransportContext)"},{"p":"io.modelcontextprotocol.util","c":"DefaultMcpUriTemplateManager","l":"extractVariableValues(String)","u":"extractVariableValues(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"McpUriTemplateManager","l":"extractVariableValues(String)","u":"extractVariableValues(java.lang.String)"},{"p":"org.eclipse.mcp.platform","c":"FactoryProvider","l":"FactoryProvider()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallStatus","l":"failed"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"FAILED_TO_SEND_ERROR_RESPONSE"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"FAILED_TO_SEND_ERROR_RESPONSE"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"FAILED_TO_SEND_ERROR_RESPONSE"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"fetch"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"file()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"File(String, boolean, McpSchema.ResourceLink)","u":"%3Cinit%3E(java.lang.String,boolean,io.modelcontextprotocol.spec.McpSchema.ResourceLink)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"FileSystemCapability(Map<String, Object>, Boolean, Boolean)","u":"%3Cinit%3E(java.util.Map,java.lang.Boolean,java.lang.Boolean)"},{"p":"org.eclipse.mcp.acp.view","c":"ToolbarButtonContributor","l":"fill(CoolBar, int)","u":"fill(org.eclipse.swt.widgets.CoolBar,int)"},{"p":"org.eclipse.mcp.acp.view","c":"ToolbarButtonContributor","l":"fill(Menu, int)","u":"fill(org.eclipse.swt.widgets.Menu,int)"},{"p":"org.eclipse.mcp.acp.view","c":"ToolbarButtonContributor","l":"fill(ToolBar, int)","u":"fill(org.eclipse.swt.widgets.ToolBar,int)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"FIRST_PAGE"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"forceRestart()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"fromEditorName(String)","u":"fromEditorName(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonParser","l":"fromJson(String, Class<T>)","u":"fromJson(java.lang.String,java.lang.Class)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonParser","l":"fromJson(String, Type)","u":"fromJson(java.lang.String,java.lang.reflect.Type)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonParser","l":"fromJson(String, TypeReference<T>)","u":"fromJson(java.lang.String,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"fromModel(IConsole)","u":"fromModel(org.eclipse.ui.console.IConsole)"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"fromModel(IEditorReference)","u":"fromModel(org.eclipse.ui.IEditorReference)"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"fromModel(IResource)","u":"fromModel(org.eclipse.core.resources.IResource)"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"fromModel(T)"},{"p":"io.modelcontextprotocol.client.transport","c":"AsyncHttpRequestCustomizer","l":"fromSync(SyncHttpRequestCustomizer)","u":"fromSync(io.modelcontextprotocol.client.transport.SyncHttpRequestCustomizer)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"fromUri(String)","u":"fromUri(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"fromUri(String)","u":"fromUri(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"fromUri(String)","u":"fromUri(java.lang.String)"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"fromUri(String)","u":"fromUri(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"fs()"},{"p":"org.eclipse.mcp.acp.agent","c":"GeminiService","l":"GeminiService()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonSchemaGenerator","l":"generateForMethodInput(Method)","u":"generateForMethodInput(java.lang.reflect.Method)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonSchemaGenerator","l":"generateFromClass(Class<?>)","u":"generateFromClass(java.lang.Class)"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool","l":"generateOutputSchema()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"DefaultMcpTransportContext","l":"get(String)","u":"get(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpTransportContext","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.springaicommunity.mcp.annotation","c":"McpMeta","l":"get(String)","u":"get(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"getActiveEditor()"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"getActiveSession()"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"getActiveSessionId()"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"getActivityId()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getAgent()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getAgent()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientThread","l":"getAgent()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"getAgent()"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"getAgents()"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"getAgentService()"},{"p":"org.eclipse.mcp.acp.view.actions","c":"SetAcpModelAction","l":"getAgentService()"},{"p":"org.eclipse.mcp","c":"IFactoryProvider","l":"getAnnotatedObjects()"},{"p":"org.eclipse.mcp.platform","c":"FactoryProvider","l":"getAnnotatedObjects()"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters","l":"getArgs()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"getAsyncServer()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getAuthenticateResponse()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getAuthenticateResponse()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getBorderColor()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"getBrowser()"},{"p":"org.eclipse.mcp","c":"Activator","l":"getBundleFile(String)","u":"getBundleFile(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"DefaultJsonSchemaValidator","l":"getCacheSize()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"getChildren(ResourceSchema.DEPTH)","u":"getChildren(org.eclipse.mcp.platform.resource.ResourceSchema.DEPTH)"},{"p":"org.eclipse.mcp.resource","c":"IResourceHierarchy","l":"getChildren(ResourceSchema.DEPTH)","u":"getChildren(org.eclipse.mcp.platform.resource.ResourceSchema.DEPTH)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getChipsBackground()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getClientCapabilities()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getClientCapabilities()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"getClientCapabilities()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"getClientCapabilities()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getClientInfo()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getClientInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"getClientInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"getClientInfo()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getCloseButtonBackground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getCloseButtonForeground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getCloseButtonHoverBackground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getCloseButtonHoverForeground()"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters","l":"getCommand()"},{"p":"org.springaicommunity.mcp.provider.complete","c":"AsyncStatelessMcpCompleteProvider","l":"getCompleteSpecifications()"},{"p":"org.springaicommunity.mcp.provider.complete","c":"SyncMcpCompletionProvider","l":"getCompleteSpecifications()"},{"p":"org.springaicommunity.mcp.provider.complete","c":"SyncStatelessMcpCompleteProvider","l":"getCompleteSpecifications()"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"getConsoles()"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"getContentsDescription()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpContexts","l":"getContextBlocks()"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager","l":"getContributor(String)","u":"getContributor(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager","l":"getContributors()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getCurrentInitializationResult()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getCurrentInitializationResult()"},{"p":"org.eclipse.mcp.acp","c":"InitializationJob","l":"getCwd()"},{"p":"org.eclipse.mcp","c":"Activator","l":"getDefault()"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"getDescription()"},{"p":"org.eclipse.mcp","c":"Activator","l":"getDisplay()"},{"p":"org.eclipse.mcp.platform","c":"ResaourceTemplates","l":"getEditorContent(String)","u":"getEditorContent(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"getEditors()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"getEditorSelection()"},{"p":"org.springaicommunity.mcp.provider.elicitation","c":"AsyncMcpElicitationProvider","l":"getElicitationSpecifications()"},{"p":"org.springaicommunity.mcp.provider.elicitation","c":"SyncMcpElicitationProvider","l":"getElicitationSpecifications()"},{"p":"io.modelcontextprotocol.client.transport","c":"ServerParameters","l":"getEnv()"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"getErrorSink()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getErrorStream()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getErrorStream()"},{"p":"org.eclipse.mcp","c":"Activator","l":"getExtensionManager()"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"getFactoryProviders()"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"getFullPath()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getHoverBackground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getHoverBorderColor()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getHoverForeground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getHoverImage()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"getId()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"getId()"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"getId()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getImage()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getInitializeRequest()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getInitializeRequest()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getInitializeResponse()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getInitializeResponse()"},{"p":"org.eclipse.mcp.acp.protocol","c":"StdinoutMessageProducer","l":"getInput()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getInputStream()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getInputStream()"},{"p":"io.modelcontextprotocol.spec","c":"McpError","l":"getJsonRpcError()"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"getLocation()"},{"p":"org.springaicommunity.mcp.provider.logging","c":"AsyncMcpLoggingProvider","l":"getLoggingSpecifications()"},{"p":"org.springaicommunity.mcp.provider.logging","c":"SyncMcpLogginProvider","l":"getLoggingSpecifications()"},{"p":"org.eclipse.mcp.acp","c":"InitializationJob","l":"getMcpServers()"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"getMenu(Control)","u":"getMenu(org.eclipse.swt.widgets.Control)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"getMenu(Menu)","u":"getMenu(org.eclipse.swt.widgets.Menu)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"getModel()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"getModel()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"getModel()"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"getModel()"},{"p":"org.eclipse.mcp.acp","c":"InitializationJob","l":"getModes()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getName()"},{"p":"org.eclipse.mcp.acp.agent","c":"GeminiService","l":"getName()"},{"p":"org.eclipse.mcp.acp.agent","c":"GooseService","l":"getName()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getName()"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"getName()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonParser","l":"getObjectMapper()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"getOrDefault(Object, V)","u":"getOrDefault(java.lang.Object,V)"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"getOutputStream()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"getOutputStream()"},{"p":"org.eclipse.mcp","c":"Activator","l":"getPreferenceStore()"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"getProblems(IResource)","u":"getProblems(org.eclipse.core.resources.IResource)"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"getProblems(ITextEditor)","u":"getProblems(org.eclipse.ui.texteditor.ITextEditor)"},{"p":"org.springaicommunity.mcp.provider.progress","c":"AsyncMcpProgressProvider","l":"getProgressSpecifications()"},{"p":"org.springaicommunity.mcp.provider.progress","c":"SyncMcpProgressProvider","l":"getProgressSpecifications()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getPrompt(McpSchema.GetPromptRequest)","u":"getPrompt(io.modelcontextprotocol.spec.McpSchema.GetPromptRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getPrompt(McpSchema.GetPromptRequest)","u":"getPrompt(io.modelcontextprotocol.spec.McpSchema.GetPromptRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"GetPromptRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"GetPromptRequest(String, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"GetPromptResult(String, List<McpSchema.PromptMessage>)","u":"%3Cinit%3E(java.lang.String,java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"GetPromptResult(String, List<McpSchema.PromptMessage>, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.List,java.util.Map)"},{"p":"org.springaicommunity.mcp.provider.prompt","c":"AsyncStatelessMcpPromptProvider","l":"getPromptSpecifications()"},{"p":"org.springaicommunity.mcp.provider.prompt","c":"SyncMcpPromptProvider","l":"getPromptSpecifications()"},{"p":"org.springaicommunity.mcp.provider.prompt","c":"SyncStatelessMcpPromptProvider","l":"getPromptSpecifications()"},{"p":"org.eclipse.mcp.acp.view","c":"ContentAssistProvider","l":"getProposals(String, int)","u":"getProposals(java.lang.String,int)"},{"p":"org.eclipse.mcp.internal","c":"ExtensionManager.Contributor","l":"getProvider()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getPushedStateBackground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getPushedStateBorderColor()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getPushedStateForeground()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getPushImage()"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReactiveUtils","l":"getReactiveReturnTypeArgument(Method)","u":"getReactiveReturnTypeArgument(java.lang.reflect.Method)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientLauncher","l":"getRemoteEndpoint()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientLauncher","l":"getRemoteProxy()"},{"p":"org.springaicommunity.mcp.provider.resource","c":"AsyncStatelessMcpResourceProvider","l":"getResourceSpecifications()"},{"p":"org.springaicommunity.mcp.provider.resource","c":"SyncMcpResourceProvider","l":"getResourceSpecifications()"},{"p":"org.springaicommunity.mcp.provider.resource","c":"SyncStatelessMcpResourceProvider","l":"getResourceSpecifications()"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"getResourceTemplate(String)","u":"getResourceTemplate(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"getResourceTemplate(String)","u":"getResourceTemplate(java.lang.String)"},{"p":"org.springaicommunity.mcp.provider.sampling","c":"SyncMcpSamplingProvider","l":"getSamplingSpecifications()"},{"p":"org.springaicommunity.mcp.provider.sampling","c":"AsyncMcpSamplingProvider","l":"getSamplingSpecifictions()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getSelection()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getServerCapabilities()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getServerCapabilities()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"getServerCapabilities()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"getServerCapabilities()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"getServerCapabilities()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"getServerCapabilities()"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"getServerContentsDescription()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getServerInfo()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getServerInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"getServerInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"getServerInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"getServerInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"getServerInfo()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"getServerInstructions()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"getServerInstructions()"},{"p":"org.eclipse.mcp","c":"Activator","l":"getServerManager()"},{"p":"org.eclipse.mcp.acp","c":"IAcpSessionListener","l":"getSessionId()"},{"p":"org.eclipse.mcp.acp","c":"InitializationJob","l":"getSessionId()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"getSessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientThread","l":"getStatus()"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"getTasks(IResource)","u":"getTasks(org.eclipse.core.resources.IResource)"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"getTasks(ITextEditor)","u":"getTasks(org.eclipse.ui.texteditor.ITextEditor)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"getTemplates()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"getTemplates()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"getTemplates()"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"getTemplates()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"getText()"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"getText()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"getTextSelection()"},{"p":"org.springaicommunity.mcp.provider.tool","c":"AsyncMcpToolProvider","l":"getToolSpecifications()"},{"p":"org.springaicommunity.mcp.provider.tool","c":"AsyncStatelessMcpToolProvider","l":"getToolSpecifications()"},{"p":"org.springaicommunity.mcp.provider.tool","c":"SyncMcpToolProvider","l":"getToolSpecifications()"},{"p":"org.springaicommunity.mcp.provider.tool","c":"SyncStatelessMcpToolProvider","l":"getToolSpecifications()"},{"p":"org.eclipse.mcp","c":"IMCPServices","l":"getToolVisibility(String)","u":"getToolVisibility(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"MCPServices","l":"getToolVisibility(String)","u":"getToolVisibility(java.lang.String)"},{"p":"org.eclipse.mcp","c":"IMCPServices","l":"getTracer()"},{"p":"org.eclipse.mcp.internal","c":"MCPServices","l":"getTracer()"},{"p":"io.modelcontextprotocol.util","c":"DefaultMcpUriTemplateManager","l":"getVariableNames()"},{"p":"io.modelcontextprotocol.util","c":"McpUriTemplateManager","l":"getVariableNames()"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"getVisibility(String)","u":"getVisibility(java.lang.String)"},{"p":"org.eclipse.mcp.platform","c":"ResaourceTemplates","l":"getWorkspaceFileContent(String, String)","u":"getWorkspaceFileContent(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.agent","c":"GooseService","l":"GooseService()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.DEPTH","l":"GRANDCHILDREN"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession.InitNotificationHandler","l":"handle()"},{"p":"io.modelcontextprotocol.server","c":"McpNotificationHandler","l":"handle(McpAsyncServerExchange, Object)","u":"handle(io.modelcontextprotocol.server.McpAsyncServerExchange,java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpRequestHandler","l":"handle(McpAsyncServerExchange, Object)","u":"handle(io.modelcontextprotocol.server.McpAsyncServerExchange,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession.NotificationHandler","l":"handle(McpAsyncServerExchange, Object)","u":"handle(io.modelcontextprotocol.server.McpAsyncServerExchange,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession.RequestHandler","l":"handle(McpAsyncServerExchange, Object)","u":"handle(io.modelcontextprotocol.server.McpAsyncServerExchange,java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpInitRequestHandler","l":"handle(McpSchema.InitializeRequest)","u":"handle(io.modelcontextprotocol.spec.McpSchema.InitializeRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession.InitRequestHandler","l":"handle(McpSchema.InitializeRequest)","u":"handle(io.modelcontextprotocol.spec.McpSchema.InitializeRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.InitRequestHandler","l":"handle(McpSchema.InitializeRequest)","u":"handle(io.modelcontextprotocol.spec.McpSchema.InitializeRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"handle(McpSchema.JSONRPCMessage)","u":"handle(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessNotificationHandler","l":"handle(McpTransportContext, Object)","u":"handle(io.modelcontextprotocol.server.McpTransportContext,java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessRequestHandler","l":"handle(McpTransportContext, Object)","u":"handle(io.modelcontextprotocol.server.McpTransportContext,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession.NotificationHandler","l":"handle(Object)","u":"handle(java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession.RequestHandler","l":"handle(Object)","u":"handle(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerHandler","l":"handleNotification(McpTransportContext, McpSchema.JSONRPCNotification)","u":"handleNotification(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.JSONRPCNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerHandler","l":"handleRequest(McpTransportContext, McpSchema.JSONRPCRequest)","u":"handleRequest(io.modelcontextprotocol.server.McpTransportContext,io.modelcontextprotocol.spec.McpSchema.JSONRPCRequest)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonSchemaGenerator","l":"hasCallToolRequestParameter(Method)","u":"hasCallToolRequestParameter(java.lang.reflect.Method)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncCompletionSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncPromptSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncResourceSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncCompletionSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncPromptSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncResourceSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncCompletionSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncPromptSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncResourceSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncCompletionSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncPromptSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncResourceSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotations","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Elicitation","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.RootCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Sampling","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteArgument","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteContext","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelHint","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptMessage","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SamplingMessage","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.CompletionCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.LoggingCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.PromptCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ResourceCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ToolCapabilities","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SetLevelRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionInit","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommandInput","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CancelNotification","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtNotification","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Plan","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionOutcome","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentMessageChunk","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentThoughtChunk","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAvailableCommandsUpdate","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeUpdate","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionUserMessageChunk","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentContent","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentTerminal","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"hashCode()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileResponse","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Children","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Consoles","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editors","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Problems","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Tasks","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextEditorSelection","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"hashCode()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"hashCode()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpMeta","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncElicitationSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncElicitationSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncLoggingSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncLoggingSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncProgressSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncProgressSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncSamplingSpecification","l":"hashCode()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncSamplingSpecification","l":"hashCode()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"hasMore()"},{"p":"io.modelcontextprotocol.util","c":"Assert","l":"hasText(String)","u":"hasText(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"Utils","l":"hasText(String)","u":"hasText(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"Assert","l":"hasText(String, String)","u":"hasText(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"headers()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"headers()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryPriority","l":"high"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.PRIORITY","l":"HIGH"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommandInput","l":"hint()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"hints()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"hints(List<McpSchema.ModelHint>)","u":"hints(java.util.List)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"http()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"HttpClientSseClientTransport(HttpClient.Builder, HttpRequest.Builder, String, String, ObjectMapper)","u":"%3Cinit%3E(java.net.http.HttpClient.Builder,java.net.http.HttpRequest.Builder,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"HttpClientSseClientTransport(HttpClient.Builder, String, ObjectMapper)","u":"%3Cinit%3E(java.net.http.HttpClient.Builder,java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"HttpClientSseClientTransport(HttpClient.Builder, String, String, ObjectMapper)","u":"%3Cinit%3E(java.net.http.HttpClient.Builder,java.lang.String,java.lang.String,com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"HttpClientSseClientTransport(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"HttpHeader(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"httpRequestCustomizer(SyncHttpRequestCustomizer)","u":"httpRequestCustomizer(io.modelcontextprotocol.client.transport.SyncHttpRequestCustomizer)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"httpRequestCustomizer(SyncHttpRequestCustomizer)","u":"httpRequestCustomizer(io.modelcontextprotocol.client.transport.SyncHttpRequestCustomizer)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"HttpServletSseServerTransportProvider(ObjectMapper, String)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"HttpServletSseServerTransportProvider(ObjectMapper, String, String)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"HttpServletSseServerTransportProvider(ObjectMapper, String, String, String)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"HttpServletSseServerTransportProvider(ObjectMapper, String, String, String, Duration)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper,java.lang.String,java.lang.String,java.lang.String,java.time.Duration)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"HttpTransport(AcpSchema.HttpHeader[], String, String, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.HttpHeader[],java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"ID"},{"p":"org.eclipse.mcp.acp.view.actions","c":"AddToChatAction","l":"ID"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"id()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"id()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"id()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"id()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"id()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"idempotentHint()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool.McpAnnotations","l":"idempotentHint()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteReference","l":"identifier()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"identifier()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"identifier()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"image()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"ImageBlock(Map<String, Object>, AcpSchema.Annotations, String, String, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"ImageContent(List<McpSchema.Role>, Double, String, String)","u":"%3Cinit%3E(java.util.List,java.lang.Double,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"ImageContent(Map<String, Object>, AcpSchema.Annotations, String, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"ImageContent(McpSchema.Annotations, String, String)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"ImageContent(McpSchema.Annotations, String, String, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,java.lang.String,java.lang.String,java.util.Map)"},{"p":"org.eclipse.mcp.internal","c":"Images","l":"imagelist"},{"p":"org.eclipse.mcp.internal","c":"Images","l":"Images()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.internal","c":"Images","l":"IMG_PROMPTMANAGER"},{"p":"org.eclipse.mcp.internal","c":"Images","l":"IMG_RESOURCEMANAGER"},{"p":"org.eclipse.mcp.internal","c":"Images","l":"IMG_SERVER"},{"p":"org.eclipse.mcp.internal","c":"Images","l":"IMG_TOOL"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"immediateExecution(boolean)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"immediateExecution(boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"Implementation(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"Implementation(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryStatus","l":"in_progress"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallStatus","l":"in_progress"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"includeContext()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"includeContext(McpSchema.CreateMessageRequest.ContextInclusionStrategy)","u":"includeContext(io.modelcontextprotocol.spec.McpSchema.CreateMessageRequest.ContextInclusionStrategy)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.DEPTH","l":"INFINITE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"INFO"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.SEVERITY","l":"INFO"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"init(IWorkbench)","u":"init(org.eclipse.ui.IWorkbench)"},{"p":"org.eclipse.mcp.internal.preferences","c":"AgentGeneralPreferencePage","l":"init(IWorkbench)","u":"init(org.eclipse.ui.IWorkbench)"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"init(IWorkbench)","u":"init(org.eclipse.ui.IWorkbench)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"init(McpSchema.ClientCapabilities, McpSchema.Implementation)","u":"init(io.modelcontextprotocol.spec.McpSchema.ClientCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler.Builder","l":"initialDelay(Duration)","u":"initialDelay(java.time.Duration)"},{"p":"org.eclipse.mcp.acp","c":"InitializationJob","l":"InitializationJob(IAgentService, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.agent.IAgentService,java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"initializationTimeout(Duration)","u":"initializationTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"initializationTimeout(Duration)","u":"initializationTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"INITIALIZE_RESULT_TYPE_REF"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"initialize()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"initialize()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"initialize()"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"initialize(AcpSchema.InitializeRequest)","u":"initialize(org.eclipse.mcp.acp.protocol.AcpSchema.InitializeRequest)"},{"p":"org.eclipse.mcp","c":"IFactoryProvider","l":"initialize(IMCPServices)","u":"initialize(org.eclipse.mcp.IMCPServices)"},{"p":"org.eclipse.mcp.platform","c":"FactoryProvider","l":"initialize(IMCPServices)","u":"initialize(org.eclipse.mcp.IMCPServices)"},{"p":"org.eclipse.mcp.platform","c":"ResourceController","l":"initialize(IMCPServices)","u":"initialize(org.eclipse.mcp.IMCPServices)"},{"p":"org.eclipse.mcp.internal.preferences","c":"PreferenceInitializer","l":"initializeDefaultPreferences()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"InitializeRequest(Map<String, Object>, AcpSchema.ClientCapabilities, Integer)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ClientCapabilities,java.lang.Integer)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"InitializeRequest(String, McpSchema.ClientCapabilities, McpSchema.Implementation)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"InitializeRequest(String, McpSchema.ClientCapabilities, McpSchema.Implementation, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"InitializeResponse(Map<String, Object>, AcpSchema.AgentCapabilities, AcpSchema.AuthMethod[], Integer)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.AgentCapabilities,org.eclipse.mcp.acp.protocol.AcpSchema.AuthMethod[],java.lang.Integer)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"InitializeResult(String, McpSchema.ServerCapabilities, McpSchema.Implementation, String)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpSchema.ServerCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"InitializeResult(String, McpSchema.ServerCapabilities, McpSchema.Implementation, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpSchema.ServerCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionInit","l":"initResult()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"input()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"inputSchema()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"inputSchema(McpSchema.JsonSchema)","u":"inputSchema(io.modelcontextprotocol.spec.McpSchema.JsonSchema)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"inputSchema(String)","u":"inputSchema(java.lang.String)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"instance()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"instructions()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"instructions(String)","u":"instructions(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"instructions(String)","u":"instructions(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"instructions(String)","u":"instructions(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"instructions(String)","u":"instructions(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"intelligencePriority()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"intelligencePriority(Double)","u":"intelligencePriority(java.lang.Double)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ErrorCodes","l":"INTERNAL_ERROR"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler.Builder","l":"interval(Duration)","u":"interval(java.time.Duration)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ErrorCodes","l":"INVALID_PARAMS"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ErrorCodes","l":"INVALID_REQUEST"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"isActive()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"isActive()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"isAssignable(Class<?>, Class<?>)","u":"isAssignable(java.lang.Class,java.lang.Class)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"isDirty()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"isDisposed()"},{"p":"org.eclipse.mcp.acp.view","c":"ToolbarButtonContributor","l":"isDynamic()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"isEmpty()"},{"p":"io.modelcontextprotocol.util","c":"Utils","l":"isEmpty(Collection<?>)","u":"isEmpty(java.util.Collection)"},{"p":"io.modelcontextprotocol.util","c":"Utils","l":"isEmpty(Map<?, ?>)","u":"isEmpty(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"isError()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"isError(Boolean)","u":"isError(java.lang.Boolean)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"isFolder()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"isInitialized()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"isInitialized()"},{"p":"io.modelcontextprotocol.spec","c":"McpLoggableSession","l":"isNotificationForLevelAllowed(McpSchema.LoggingLevel)","u":"isNotificationForLevelAllowed(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"isNotificationForLevelAllowed(McpSchema.LoggingLevel)","u":"isNotificationForLevelAllowed(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"isNotificationForLevelAllowed(McpSchema.LoggingLevel)","u":"isNotificationForLevelAllowed(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"isNotificationForLevelAllowed(McpSchema.LoggingLevel)","u":"isNotificationForLevelAllowed(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"isNotificationForLevelAllowed(McpSchema.LoggingLevel)","u":"isNotificationForLevelAllowed(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"isPrimitiveOrWrapper(Class<?>)","u":"isPrimitiveOrWrapper(java.lang.Class)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"isPrimitiveWrapper(Class<?>)","u":"isPrimitiveWrapper(java.lang.Class)"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReactiveUtils","l":"isReactiveReturnTypeOfCallToolResult(Method)","u":"isReactiveReturnTypeOfCallToolResult(java.lang.reflect.Method)"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReactiveUtils","l":"isReactiveReturnTypeOfVoid(Method)","u":"isReactiveReturnTypeOfVoid(java.lang.reflect.Method)"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler","l":"isRunning()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"isRunning()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"isRunning()"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"isRunning()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"isSimpleValueType(Class<?>)","u":"isSimpleValueType(java.lang.Class)"},{"p":"io.modelcontextprotocol.util","c":"Assert","l":"isTrue(boolean, String)","u":"isTrue(boolean,java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"DefaultMcpUriTemplateManager","l":"isUriTemplate(String)","u":"isUriTemplate(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"McpUriTemplateManager","l":"isUriTemplate(String)","u":"isUriTemplate(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"isVoidType(Class<?>)","u":"isVoidType(java.lang.Class)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"JSONRPC_VERSION"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCMessage","l":"jsonrpc()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"jsonrpc()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"jsonrpc()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"jsonrpc()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"JSONRPCError(int, String, Object)","u":"%3Cinit%3E(int,java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"JSONRPCNotification(String, String, Object)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"JSONRPCRequest(String, String, Object, Object)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"JSONRPCResponse(String, Object, Object, McpSchema.JSONRPCResponse.JSONRPCError)","u":"%3Cinit%3E(java.lang.String,java.lang.Object,java.lang.Object,io.modelcontextprotocol.spec.McpSchema.JSONRPCResponse.JSONRPCError)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"JsonSchema(String, Map<String, Object>, List<String>, Boolean, Map<String, Object>, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map,java.util.List,java.lang.Boolean,java.util.Map,java.util.Map)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonSchemaGenerator","l":"JsonSchemaGenerator()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"jsonSchemaValidator(JsonSchemaValidator)","u":"jsonSchemaValidator(io.modelcontextprotocol.spec.JsonSchemaValidator)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"jsonSchemaValidator(JsonSchemaValidator)","u":"jsonSchemaValidator(io.modelcontextprotocol.spec.JsonSchemaValidator)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"jsonSchemaValidator(JsonSchemaValidator)","u":"jsonSchemaValidator(io.modelcontextprotocol.spec.JsonSchemaValidator)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"jsonSchemaValidator(JsonSchemaValidator)","u":"jsonSchemaValidator(io.modelcontextprotocol.spec.JsonSchemaValidator)"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"jsonStructuredOutput()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"keepAliveInterval(Duration)","u":"keepAliveInterval(java.time.Duration)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"keepAliveInterval(Duration)","u":"keepAliveInterval(java.time.Duration)"},{"p":"io.modelcontextprotocol.server","c":"McpTransportContext","l":"KEY"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"keyTraversed(TraverseEvent)","u":"keyTraversed(org.eclipse.swt.events.TraverseEvent)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"KillTerminalCommandRequest(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandResponse","l":"KillTerminalCommandResponse(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"kind()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"kind()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"kind()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"kind()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"kind()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"label()"},{"p":"io.modelcontextprotocol.spec","c":"HttpHeaders","l":"LAST_EVENT_ID"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportStream","l":"lastId()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportStream","l":"lastId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"lastModified()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"LATEST_PROTOCOL_VERSION"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"length()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"length()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"level()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"level()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SetLevelRequest","l":"level()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification.Builder","l":"level(McpSchema.LoggingLevel)","u":"level(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"limit()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"line()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"line()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"lineNumber()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.RootCapabilities","l":"listChanged()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.PromptCapabilities","l":"listChanged()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ResourceCapabilities","l":"listChanged()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ToolCapabilities","l":"listChanged()"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"listChildResources(String, ResourceSchema.DEPTH)","u":"listChildResources(java.lang.String,org.eclipse.mcp.platform.resource.ResourceSchema.DEPTH)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"listConsoles()"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"listEditors()"},{"p":"org.eclipse.mcp.acp.protocol","c":"StdinoutMessageProducer","l":"listen(MessageConsumer)","u":"listen(org.eclipse.lsp4j.jsonrpc.MessageConsumer)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"listeningStream(McpStreamableServerTransport)","u":"listeningStream(io.modelcontextprotocol.spec.McpStreamableServerTransport)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"listProblems(String, String)","u":"listProblems(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"listProjects()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listPrompts()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listPrompts()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listPrompts(String)","u":"listPrompts(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listPrompts(String)","u":"listPrompts(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"ListPromptsResult(List<McpSchema.Prompt>, String)","u":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"ListPromptsResult(List<McpSchema.Prompt>, String, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listResources()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listResources()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listResources(String)","u":"listResources(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listResources(String)","u":"listResources(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"ListResourcesResult(List<McpSchema.Resource>, String)","u":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"ListResourcesResult(List<McpSchema.Resource>, String, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listResourceTemplates()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listResourceTemplates()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listResourceTemplates(String)","u":"listResourceTemplates(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listResourceTemplates(String)","u":"listResourceTemplates(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"ListResourceTemplatesResult(List<McpSchema.ResourceTemplate>, String)","u":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"ListResourceTemplatesResult(List<McpSchema.ResourceTemplate>, String, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"listRoots()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"listRoots()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"listRoots(String)","u":"listRoots(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"listRoots(String)","u":"listRoots(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"ListRootsResult(List<McpSchema.Root>)","u":"%3Cinit%3E(java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"ListRootsResult(List<McpSchema.Root>, String)","u":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"ListRootsResult(List<McpSchema.Root>, String, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.String,java.util.Map)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"listTasks(String)","u":"listTasks(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listTools()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listTools()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"listTools(String)","u":"listTools(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"listTools(String)","u":"listTools(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"ListToolsResult(List<McpSchema.Tool>, String)","u":"%3Cinit%3E(java.util.List,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"ListToolsResult(List<McpSchema.Tool>, String, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.lang.String,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"load(AcpSchema.LoadSessionRequest)","u":"load(org.eclipse.mcp.acp.protocol.AcpSchema.LoadSessionRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"loadSession()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"LoadSessionRequest(Map<String, Object>, String, AcpSchema.McpServer[], String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.McpServer[],java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionResponse","l":"LoadSessionResponse(Map<String, Object>, AcpSchema.SessionModelState)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.SessionModelState)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"location()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"locations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"locations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"locations()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"locations()"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"log(McpSchema.LoggingLevel, Object, String)","u":"log(io.modelcontextprotocol.spec.McpSchema.LoggingLevel,java.lang.Object,java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"log(String, Throwable)","u":"log(java.lang.String,java.lang.Throwable)"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"log(Throwable)","u":"log(java.lang.Throwable)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"logger()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification.Builder","l":"logger(String)","u":"logger(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"LOGGING_MESSAGE_NOTIFICATION_TYPE_REF"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"logging()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"logging()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.LoggingCapabilities","l":"LoggingCapabilities()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"loggingConsumer(Consumer<McpSchema.LoggingMessageNotification>)","u":"loggingConsumer(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"loggingConsumer(Function<McpSchema.LoggingMessageNotification, Mono<Void>>)","u":"loggingConsumer(java.util.function.Function)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"loggingConsumers(List<Consumer<McpSchema.LoggingMessageNotification>>)","u":"loggingConsumers(java.util.List)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"loggingConsumers(List<Function<McpSchema.LoggingMessageNotification, Mono<Void>>>)","u":"loggingConsumers(java.util.List)"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncLoggingSpecification","l":"loggingHandler()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncLoggingSpecification","l":"loggingHandler()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"LoggingMessageNotification(McpSchema.LoggingLevel, String, String)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.LoggingLevel,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"LoggingMessageNotification(McpSchema.LoggingLevel, String, String, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.LoggingLevel,java.lang.String,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"loggingNotification(McpSchema.LoggingMessageNotification)","u":"loggingNotification(io.modelcontextprotocol.spec.McpSchema.LoggingMessageNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"loggingNotification(McpSchema.LoggingMessageNotification)","u":"loggingNotification(io.modelcontextprotocol.spec.McpSchema.LoggingMessageNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"loggingNotification(McpSchema.LoggingMessageNotification)","u":"loggingNotification(io.modelcontextprotocol.spec.McpSchema.LoggingMessageNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"loggingNotification(McpSchema.LoggingMessageNotification)","u":"loggingNotification(io.modelcontextprotocol.spec.McpSchema.LoggingMessageNotification)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryPriority","l":"low"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.PRIORITY","l":"LOW"},{"p":"org.eclipse.mcp.acp.protocol","c":"RawDriver","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"Marker(ResourceSchema.TYPE, String, int, int, int, boolean, String, McpSchema.ResourceLink, long, long, ResourceSchema.SEVERITY, ResourceSchema.PRIORITY)","u":"%3Cinit%3E(org.eclipse.mcp.platform.resource.ResourceSchema.TYPE,java.lang.String,int,int,int,boolean,java.lang.String,io.modelcontextprotocol.spec.McpSchema.ResourceLink,long,long,org.eclipse.mcp.platform.resource.ResourceSchema.SEVERITY,org.eclipse.mcp.platform.resource.ResourceSchema.PRIORITY)"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"MarkerAdapter(Annotation, Position, IDocument, ITextEditor)","u":"%3Cinit%3E(org.eclipse.jface.text.source.Annotation,org.eclipse.jface.text.Position,org.eclipse.jface.text.IDocument,org.eclipse.ui.texteditor.ITextEditor)"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"MarkerAdapter(IMarker)","u":"%3Cinit%3E(org.eclipse.core.resources.IMarker)"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"markInitialized(String)","u":"markInitialized(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSession","l":"markInitialized(String)","u":"markInitialized(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"DefaultMcpUriTemplateManager","l":"matches(String)","u":"matches(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"McpUriTemplateManager","l":"matches(String)","u":"matches(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"matches(String)","u":"matches(java.lang.String)"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"matches(String)","u":"matches(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"max_tokens"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.StopReason","l":"MAX_TOKENS"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"max_turn_requests"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"maxTokens()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"maxTokens(int)"},{"p":"io.modelcontextprotocol.spec","c":"ProtocolVersions","l":"MCP_2024_11_05"},{"p":"io.modelcontextprotocol.spec","c":"ProtocolVersions","l":"MCP_2025_03_26"},{"p":"io.modelcontextprotocol.spec","c":"ProtocolVersions","l":"MCP_2025_06_18"},{"p":"io.modelcontextprotocol.spec","c":"HttpHeaders","l":"MCP_SESSION_ID"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"McpAsyncServerExchange(McpSession, McpSchema.ClientCapabilities, McpSchema.Implementation)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSession,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"McpAsyncServerExchange(String, McpLoggableSession, McpSchema.ClientCapabilities, McpSchema.Implementation, McpTransportContext)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpLoggableSession,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation,io.modelcontextprotocol.server.McpTransportContext)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"mcpCapabilities()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"McpCapabilities(Map<String, Object>, Boolean, Boolean)","u":"%3Cinit%3E(java.util.Map,java.lang.Boolean,java.lang.Boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession","l":"McpClientSession(Duration, McpClientTransport, Map<String, McpClientSession.RequestHandler<?>>, Map<String, McpClientSession.NotificationHandler>)","u":"%3Cinit%3E(java.time.Duration,io.modelcontextprotocol.spec.McpClientTransport,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession","l":"McpClientSession(Duration, McpClientTransport, Map<String, McpClientSession.RequestHandler<?>>, Map<String, McpClientSession.NotificationHandler>, Function<? super Mono<Void>, ? extends Publisher<Void>>)","u":"%3Cinit%3E(java.time.Duration,io.modelcontextprotocol.spec.McpClientTransport,java.util.Map,java.util.Map,java.util.function.Function)"},{"p":"org.springaicommunity.mcp.method.complete","c":"AbstractMcpCompleteMethodCallback.McpCompleteMethodException","l":"McpCompleteMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.complete","c":"AbstractMcpCompleteMethodCallback.McpCompleteMethodException","l":"McpCompleteMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AbstractMcpElicitationMethodCallback.McpElicitationMethodException","l":"McpElicitationMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AbstractMcpElicitationMethodCallback.McpElicitationMethodException","l":"McpElicitationMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"mcpEndpoint(String)","u":"mcpEndpoint(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpError","l":"McpError(McpSchema.JSONRPCResponse.JSONRPCError)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.JSONRPCResponse.JSONRPCError)"},{"p":"io.modelcontextprotocol.spec","c":"McpError","l":"McpError(Object)","u":"%3Cinit%3E(java.lang.Object)"},{"p":"org.eclipse.mcp","c":"MCPException","l":"MCPException(Exception)","u":"%3Cinit%3E(java.lang.Exception)"},{"p":"org.eclipse.mcp","c":"MCPException","l":"MCPException(IStatus)","u":"%3Cinit%3E(org.eclipse.core.runtime.IStatus)"},{"p":"org.eclipse.mcp","c":"MCPException","l":"MCPException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"McpGeneralPreferencePage()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AbstractMcpLoggingMethodCallback.McpLoggingConsumerMethodException","l":"McpLoggingConsumerMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.logging","c":"AbstractMcpLoggingMethodCallback.McpLoggingConsumerMethodException","l":"McpLoggingConsumerMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.springaicommunity.mcp.annotation","c":"McpMeta","l":"McpMeta(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.springaicommunity.mcp.method.progress","c":"AbstractMcpProgressMethodCallback.McpProgressMethodException","l":"McpProgressMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.progress","c":"AbstractMcpProgressMethodCallback.McpProgressMethodException","l":"McpProgressMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AbstractMcpPromptMethodCallback.McpPromptMethodException","l":"McpPromptMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.prompt","c":"AbstractMcpPromptMethodCallback.McpPromptMethodException","l":"McpPromptMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback.McpResourceMethodException","l":"McpResourceMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback.McpResourceMethodException","l":"McpResourceMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AbstractMcpSamplingMethodCallback.McpSamplingMethodException","l":"McpSamplingMethodException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AbstractMcpSamplingMethodCallback.McpSamplingMethodException","l":"McpSamplingMethodException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"MCPServer(String, String, int, IFactoryProvider[])","u":"%3Cinit%3E(java.lang.String,java.lang.String,int,org.eclipse.mcp.IFactoryProvider[])"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures","l":"McpServerFeatures()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"mcpServers()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"mcpServers()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"McpServerSession(String, Duration, McpServerTransport, McpInitRequestHandler, Map<String, McpRequestHandler<?>>, Map<String, McpNotificationHandler>)","u":"%3Cinit%3E(java.lang.String,java.time.Duration,io.modelcontextprotocol.spec.McpServerTransport,io.modelcontextprotocol.server.McpInitRequestHandler,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"McpServerSession(String, Duration, McpServerTransport, McpInitRequestHandler, McpServerSession.InitNotificationHandler, Map<String, McpRequestHandler<?>>, Map<String, McpNotificationHandler>)","u":"%3Cinit%3E(java.lang.String,java.time.Duration,io.modelcontextprotocol.spec.McpServerTransport,io.modelcontextprotocol.server.McpInitRequestHandler,io.modelcontextprotocol.spec.McpServerSession.InitNotificationHandler,java.util.Map,java.util.Map)"},{"p":"org.eclipse.mcp.internal","c":"MCPServices","l":"MCPServices(MCPServer)","u":"%3Cinit%3E(org.eclipse.mcp.internal.MCPServer)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures","l":"McpStatelessServerFeatures()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"McpStreamableServerSession(String, McpSchema.ClientCapabilities, McpSchema.Implementation, Duration, Map<String, McpRequestHandler<?>>, Map<String, McpNotificationHandler>)","u":"%3Cinit%3E(java.lang.String,io.modelcontextprotocol.spec.McpSchema.ClientCapabilities,io.modelcontextprotocol.spec.McpSchema.Implementation,java.time.Duration,java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionInit","l":"McpStreamableServerSessionInit(McpStreamableServerSession, Mono<McpSchema.InitializeResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpStreamableServerSession,reactor.core.publisher.Mono)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"McpStreamableServerSessionStream(McpStreamableServerTransport)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpStreamableServerTransport)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"McpSyncServer(McpAsyncServer)","u":"%3Cinit%3E(io.modelcontextprotocol.server.McpAsyncServer)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"McpSyncServer(McpAsyncServer, boolean)","u":"%3Cinit%3E(io.modelcontextprotocol.server.McpAsyncServer,boolean)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"McpSyncServerExchange(McpAsyncServerExchange)","u":"%3Cinit%3E(io.modelcontextprotocol.server.McpAsyncServerExchange)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportException","l":"McpTransportException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportException","l":"McpTransportException(String, Throwable)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportException","l":"McpTransportException(String, Throwable, boolean, boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportException","l":"McpTransportException(Throwable)","u":"%3Cinit%3E(java.lang.Throwable)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSessionNotFoundException","l":"McpTransportSessionNotFoundException(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSessionNotFoundException","l":"McpTransportSessionNotFoundException(String, Exception)","u":"%3Cinit%3E(java.lang.String,java.lang.Exception)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryPriority","l":"medium"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"MESSAGE_EVENT_TYPE"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"MESSAGE_EVENT_TYPE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"message()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"message()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"message()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"message()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Builder","l":"message(McpSchema.ElicitResult.Action)","u":"message(io.modelcontextprotocol.spec.McpSchema.ElicitResult.Action)"},{"p":"io.modelcontextprotocol.spec","c":"McpError.Builder","l":"message(String)","u":"message(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"message(String)","u":"message(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest.Builder","l":"message(String)","u":"message(java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"messageEndpoint(String)","u":"messageEndpoint(java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport.Builder","l":"messageEndpoint(String)","u":"messageEndpoint(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"messages()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"messages()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"messages(List<McpSchema.SamplingMessage>)","u":"messages(java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Content","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Notification","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Request","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContents","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Result","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CancelNotification","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Plan","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"meta()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileResponse","l":"meta()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpMeta","l":"meta()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"meta(Map<String, Object>)","u":"meta(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"metadata()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"metadata(Map<String, Object>)","u":"metadata(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_COMPLETION_COMPLETE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_ELICITATION_CREATE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_INITIALIZE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_LOGGING_SET_LEVEL"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"METHOD_NOT_ALLOWED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ErrorCodes","l":"METHOD_NOT_FOUND"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_INITIALIZED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_MESSAGE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_PROGRESS"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_PROMPTS_LIST_CHANGED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_RESOURCES_LIST_CHANGED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_RESOURCES_UPDATED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_ROOTS_LIST_CHANGED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_NOTIFICATION_TOOLS_LIST_CHANGED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_PING"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_PROMPT_GET"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_PROMPT_LIST"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_RESOURCES_LIST"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_RESOURCES_READ"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_RESOURCES_SUBSCRIBE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_RESOURCES_TEMPLATES_LIST"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_RESOURCES_UNSUBSCRIBE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_ROOTS_LIST"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_SAMPLING_CREATE_MESSAGE"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_TOOLS_CALL"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema","l":"METHOD_TOOLS_LIST"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"method()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"method()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateRequest","l":"methodId()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContent","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContents","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"mimeType()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"mimeType()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpResource","l":"mimeType()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"mimeType(String)","u":"mimeType(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"mimeType(String)","u":"mimeType(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"MissingMcpTransportSession(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"modeId()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"model()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"model(String)","u":"model(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelHint","l":"ModelHint(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"modelId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"modelId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"ModelInfo(Map<String, Object>, String, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"modelPreferences()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"ModelPreferences(List<McpSchema.ModelHint>, Double, Double, Double)","u":"%3Cinit%3E(java.util.List,java.lang.Double,java.lang.Double,java.lang.Double)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"modelPreferences(McpSchema.ModelPreferences)","u":"modelPreferences(io.modelcontextprotocol.spec.McpSchema.ModelPreferences)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"models()"},{"p":"org.eclipse.mcp.acp.view.actions","c":"ModelToolbarSelector","l":"ModelToolbarSelector()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionResponse","l":"modes()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"modes()"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"modifyText(ModifyEvent)","u":"modifyText(org.eclipse.swt.events.ModifyEvent)"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"modifyText(ModifyEvent)","u":"modifyText(org.eclipse.swt.events.ModifyEvent)"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"modifyText(ModifyEvent)","u":"modifyText(org.eclipse.swt.events.ModifyEvent)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"move"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"mutate()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BaseMetadata","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteArgument","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelHint","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"name()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"name()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"name()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"name()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"name()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpArg","l":"name()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpPrompt","l":"name()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpResource","l":"name()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool","l":"name()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"name(String)","u":"name(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"name(String)","u":"name(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"name(String)","u":"name(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"name(String)","u":"name(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"NewSessionRequest(Map<String, Object>, String, AcpSchema.McpServer[])","u":"%3Cinit%3E(java.util.Map,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.McpServer[])"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"NewSessionResponse(Map<String, Object>, AcpSchema.SessionModelState, AcpSchema.SessionModeState, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.SessionModelState,org.eclipse.mcp.acp.protocol.AcpSchema.SessionModeState,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"newText()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"nextCursor()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"nextCursor()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"nextCursor()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"nextCursor()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"nextCursor()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedResult","l":"nextCursor()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.ContextInclusionStrategy","l":"NONE"},{"p":"io.modelcontextprotocol.client.transport","c":"AsyncHttpRequestCustomizer","l":"NOOP"},{"p":"io.modelcontextprotocol.client.transport","c":"AsyncHttpRequestCustomizer.Noop","l":"Noop()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.PRIORITY","l":"NORMAL"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"NOT_FOUND"},{"p":"io.modelcontextprotocol.util","c":"Assert","l":"notEmpty(Collection<?>, String)","u":"notEmpty(java.util.Collection,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"NOTICE"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"notifyClients(String, Object)","u":"notifyClients(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"notifyClients(String, Object)","u":"notifyClients(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"notifyClients(String, Object)","u":"notifyClients(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerTransportProviderBase","l":"notifyClients(String, Object)","u":"notifyClients(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerTransportProvider","l":"notifyClients(String, Object)","u":"notifyClients(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"notifyPromptsListChanged()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"notifyPromptsListChanged()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"notifyResourcesListChanged()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"notifyResourcesListChanged()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"notifyResourcesUpdated(McpSchema.ResourcesUpdatedNotification)","u":"notifyResourcesUpdated(io.modelcontextprotocol.spec.McpSchema.ResourcesUpdatedNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"notifyResourcesUpdated(McpSchema.ResourcesUpdatedNotification)","u":"notifyResourcesUpdated(io.modelcontextprotocol.spec.McpSchema.ResourcesUpdatedNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"notifyToolsListChanged()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"notifyToolsListChanged()"},{"p":"io.modelcontextprotocol.util","c":"Assert","l":"notNull(Object, String)","u":"notNull(java.lang.Object,java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"nullSafeEquals(Object, Object)","u":"nullSafeEquals(java.lang.Object,java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"nullSafeHashCode(Object)","u":"nullSafeHashCode(java.lang.Object)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"OBJECT_TYPE_REF"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"OBJECT_TYPE_REF"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport.Builder","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider.Builder","l":"objectMapper(ObjectMapper)","u":"objectMapper(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelHint","l":"of(String)","u":"of(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"offset()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"offset()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"oldText()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips.CloseListener","l":"onClose(Chips.CloseEvent)","u":"onClose(org.eclipse.mcp.acp.view.Chips.CloseEvent)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"openConnectionOnStartup(boolean)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"openEditor(String, Integer, Integer)","u":"openEditor(java.lang.String,java.lang.Integer,java.lang.Integer)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"openWorldHint()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool.McpAnnotations","l":"openWorldHint()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"optionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionOutcome","l":"optionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"options()"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"optionsChanged(DebugOptions)","u":"optionsChanged(org.eclipse.osgi.service.debug.DebugOptions)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"other"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"OTHERS"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"OTHERS"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionOutcome","l":"outcome()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionResponse","l":"outcome()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"output()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"outputByteLimit()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"outputSchema()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"outputSchema(Map<String, Object>)","u":"outputSchema(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"outputSchema(String)","u":"outputSchema(java.lang.String)"},{"p":"org.eclipse.mcp.internal.preferences","c":"IPreferenceConstants","l":"P_ACP_GEMINI"},{"p":"org.eclipse.mcp.internal.preferences","c":"IPreferenceConstants","l":"P_ACP_NODE"},{"p":"org.eclipse.mcp.internal.preferences","c":"IPreferenceConstants","l":"P_SERVER_ENABLED"},{"p":"org.eclipse.mcp.internal.preferences","c":"IPreferenceConstants","l":"P_SERVER_HTTP_PORT"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"PAGINATED_REQUEST_TYPE_REF"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"PaginatedRequest()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"PaginatedRequest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"PaginatedRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedResult","l":"PaginatedResult(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"params()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"params()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ErrorCodes","l":"PARSE_ERROR"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"path()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"path()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"path()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"path()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryStatus","l":"pending"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallStatus","l":"pending"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"performCancel()"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"performCancel()"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"performOk()"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"performOk()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"PermissionOption(Map<String, Object>, AcpSchema.PermissionOptionKind, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.PermissionOptionKind,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"ping()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"ping()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"ping()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"ping()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Plan","l":"Plan(Map<String, Object>, AcpSchema.PlanEntry)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.PlanEntry)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"PlanEntry(Map<String, Object>, String, AcpSchema.PlanEntryPriority, AcpSchema.PlanEntryStatus)","u":"%3Cinit%3E(java.util.Map,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.PlanEntryPriority,org.eclipse.mcp.acp.protocol.AcpSchema.PlanEntryStatus)"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"PLATFORM"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"PLATFORM"},{"p":"org.eclipse.mcp","c":"Activator","l":"PLUGIN_ID"},{"p":"org.eclipse.mcp.internal.preferences","c":"PreferenceInitializer","l":"PreferenceInitializer()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotations","l":"priority()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"priority()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"priority()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"priority()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"priority()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"priority()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"priority()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"Problem"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Problems","l":"problems()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Problems","l":"Problems(ResourceSchema.Marker[])","u":"%3Cinit%3E(org.eclipse.mcp.platform.resource.ResourceSchema.Marker[])"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"PROGRESS_NOTIFICATION_TYPE_REF"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"progress()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"progressConsumer(Consumer<McpSchema.ProgressNotification>)","u":"progressConsumer(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"progressConsumer(Function<McpSchema.ProgressNotification, Mono<Void>>)","u":"progressConsumer(java.util.function.Function)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"progressConsumers(List<Consumer<McpSchema.ProgressNotification>>)","u":"progressConsumers(java.util.List)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"progressConsumers(List<Function<McpSchema.ProgressNotification, Mono<Void>>>)","u":"progressConsumers(java.util.List)"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncProgressSpecification","l":"progressHandler()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncProgressSpecification","l":"progressHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"progressNotification(McpSchema.ProgressNotification)","u":"progressNotification(io.modelcontextprotocol.spec.McpSchema.ProgressNotification)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"progressNotification(McpSchema.ProgressNotification)","u":"progressNotification(io.modelcontextprotocol.spec.McpSchema.ProgressNotification)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"ProgressNotification(String, double, Double, String)","u":"%3Cinit%3E(java.lang.String,double,java.lang.Double,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"ProgressNotification(String, Double, Double, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.Double,java.lang.Double,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"progressToken()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Request","l":"progressToken()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest.Builder","l":"progressToken(String)","u":"progressToken(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"progressToken(String)","u":"progressToken(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest.Builder","l":"progressToken(String)","u":"progressToken(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncPromptSpecification","l":"prompt()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncPromptSpecification","l":"prompt()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncPromptSpecification","l":"prompt()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncPromptSpecification","l":"prompt()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"prompt()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpComplete","l":"prompt()"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"prompt(AcpSchema.PromptRequest)","u":"prompt(org.eclipse.mcp.acp.protocol.AcpSchema.PromptRequest)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"prompt(String, AcpSchema.ContentBlock[])","u":"prompt(java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock[])"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"Prompt(String, String, List<McpSchema.PromptArgument>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"Prompt(String, String, String, List<McpSchema.PromptArgument>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"Prompt(String, String, String, List<McpSchema.PromptArgument>, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.List,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"PromptArgument(String, String, Boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.Boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"PromptArgument(String, String, String, Boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"promptCapabilities()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.PromptCapabilities","l":"PromptCapabilities(Boolean)","u":"%3Cinit%3E(java.lang.Boolean)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"PromptCapabilities(Map<String, Object>, boolean, boolean, boolean)","u":"%3Cinit%3E(java.util.Map,boolean,boolean,boolean)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncPromptSpecification","l":"promptHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncPromptSpecification","l":"promptHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncPromptSpecification","l":"promptHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncPromptSpecification","l":"promptHandler()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptMessage","l":"PromptMessage(McpSchema.Role, McpSchema.Content)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Role,io.modelcontextprotocol.spec.McpSchema.Content)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"PromptReference(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"PromptReference(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"PromptReference(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"PromptRequest(Map<String, Object>, AcpSchema.ContentBlock[], String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock[],java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptResponse","l":"PromptResponse(Map<String, Object>, AcpSchema.StopReason)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.StopReason)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"prompts()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"prompts()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"prompts(Boolean)","u":"prompts(java.lang.Boolean)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"prompts(List<McpServerFeatures.AsyncPromptSpecification>)","u":"prompts(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"prompts(List<McpServerFeatures.SyncPromptSpecification>)","u":"prompts(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"prompts(List<McpStatelessServerFeatures.AsyncPromptSpecification>)","u":"prompts(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"prompts(List<McpStatelessServerFeatures.SyncPromptSpecification>)","u":"prompts(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"prompts(Map<String, McpServerFeatures.AsyncPromptSpecification>)","u":"prompts(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"prompts(Map<String, McpServerFeatures.SyncPromptSpecification>)","u":"prompts(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"prompts(Map<String, McpStatelessServerFeatures.AsyncPromptSpecification>)","u":"prompts(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"prompts(Map<String, McpStatelessServerFeatures.SyncPromptSpecification>)","u":"prompts(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"prompts(McpServerFeatures.AsyncPromptSpecification...)","u":"prompts(io.modelcontextprotocol.server.McpServerFeatures.AsyncPromptSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"prompts(McpServerFeatures.SyncPromptSpecification...)","u":"prompts(io.modelcontextprotocol.server.McpServerFeatures.SyncPromptSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"prompts(McpStatelessServerFeatures.AsyncPromptSpecification...)","u":"prompts(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncPromptSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"prompts(McpStatelessServerFeatures.SyncPromptSpecification...)","u":"prompts(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncPromptSpecification...)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"promptsChangeConsumer(Consumer<List<McpSchema.Prompt>>)","u":"promptsChangeConsumer(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"promptsChangeConsumer(Function<List<McpSchema.Prompt>, Mono<Void>>)","u":"promptsChangeConsumer(java.util.function.Function)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"properties()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"SpringAiSchemaModule.Option","l":"PROPERTY_REQUIRED_FALSE_BY_DEFAULT"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"proposalAccepted(IContentProposal)","u":"proposalAccepted(org.eclipse.jface.fieldassist.IContentProposal)"},{"p":"org.eclipse.mcp.acp.view","c":"ContentAssistAdapter","l":"proposalAccepted(IContentProposal)","u":"proposalAccepted(org.eclipse.jface.fieldassist.IContentProposal)"},{"p":"org.eclipse.mcp.acp.view","c":"ContentAssistProvider","l":"proposalAccepted(IContentProposal)","u":"proposalAccepted(org.eclipse.jface.fieldassist.IContentProposal)"},{"p":"io.modelcontextprotocol.spec","c":"HttpHeaders","l":"PROTOCOL_VERSION"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"protocolVersion()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"protocolVersion()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"protocolVersion()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"protocolVersion()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.spec","c":"McpServerTransportProviderBase","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.spec","c":"McpStatelessServerTransport","l":"protocolVersions()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransport","l":"protocolVersions()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"purgeUnreferencedEntries()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"put(K, V)","u":"put(K,V)"},{"p":"io.modelcontextprotocol.server","c":"DefaultMcpTransportContext","l":"put(String, Object)","u":"put(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpTransportContext","l":"put(String, Object)","u":"put(java.lang.String,java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"putIfAbsent(K, V)","u":"putIfAbsent(K,V)"},{"p":"org.eclipse.mcp.acp.protocol","c":"RawDriver","l":"RawDriver()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"rawInput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"rawInput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"rawInput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"rawInput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"rawOutput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"rawOutput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"rawOutput()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"rawOutput()"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReactiveUtils","l":"ReactiveUtils()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"read"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncResourceSpecification","l":"readHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncResourceSpecification","l":"readHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncResourceSpecification","l":"readHandler()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncResourceSpecification","l":"readHandler()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"readOnlyHint()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool.McpAnnotations","l":"readOnlyHint()"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"readResource(McpSchema.ReadResourceRequest)","u":"readResource(io.modelcontextprotocol.spec.McpSchema.ReadResourceRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"readResource(McpSchema.ReadResourceRequest)","u":"readResource(io.modelcontextprotocol.spec.McpSchema.ReadResourceRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"readResource(McpSchema.Resource)","u":"readResource(io.modelcontextprotocol.spec.McpSchema.Resource)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"readResource(McpSchema.Resource)","u":"readResource(io.modelcontextprotocol.spec.McpSchema.Resource)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"readResource(String)","u":"readResource(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"ReadResourceRequest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"ReadResourceRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"ReadResourceResult(List<McpSchema.ResourceContents>)","u":"%3Cinit%3E(java.util.List)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"ReadResourceResult(List<McpSchema.ResourceContents>, Map<String, Object>)","u":"%3Cinit%3E(java.util.List,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"readTextFile()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"readTextFile(AcpSchema.ReadTextFileRequest)","u":"readTextFile(org.eclipse.mcp.acp.protocol.AcpSchema.ReadTextFileRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"readTextFile(AcpSchema.ReadTextFileRequest)","u":"readTextFile(org.eclipse.mcp.acp.protocol.AcpSchema.ReadTextFileRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"ReadTextFileRequest(Map<String, Object>, Integer, Integer, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.Integer,java.lang.Integer,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileResponse","l":"ReadTextFileResponse(Map<String, Object>, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"ref()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncCompletionSpecification","l":"referenceKey()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncCompletionSpecification","l":"referenceKey()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncCompletionSpecification","l":"referenceKey()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncCompletionSpecification","l":"referenceKey()"},{"p":"org.eclipse.mcp.acp.view.actions","c":"ModelToolbarSelector","l":"refresh()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"refusal"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchemaTypeAdapters","l":"registerTypeAdapters(GsonBuilder)","u":"registerTypeAdapters(com.google.gson.GsonBuilder)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"ReleaseTerminalRequest(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalResponse","l":"ReleaseTerminalResponse(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"remove(Object, Object)","u":"remove(java.lang.Object,java.lang.Object)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"removeAcpListener(IAcpSessionListener)","u":"removeAcpListener(org.eclipse.mcp.acp.IAcpSessionListener)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"removeCloseListener(Chips.CloseListener)","u":"removeCloseListener(org.eclipse.mcp.acp.view.Chips.CloseListener)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSession","l":"removeConnection(CONNECTION)"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"removeConnection(Disposable)","u":"removeConnection(reactor.core.Disposable)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"removePrompt(String)","u":"removePrompt(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"removePrompt(String)","u":"removePrompt(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"removePrompt(String)","u":"removePrompt(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"removePrompt(String)","u":"removePrompt(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"org.eclipse.mcp","c":"IMCPServices","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"MCPServices","l":"removeResource(String)","u":"removeResource(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"removeRoot(String)","u":"removeRoot(java.lang.String)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"removeRoot(String)","u":"removeRoot(java.lang.String)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"removeSelectionListener(SelectionListener)","u":"removeSelectionListener(org.eclipse.swt.events.SelectionListener)"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"removeServerListener(ServerManager.IServerListener)","u":"removeServerListener(org.eclipse.mcp.internal.ServerManager.IServerListener)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServer","l":"removeTool(String)","u":"removeTool(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessAsyncServer","l":"removeTool(String)","u":"removeTool(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessSyncServer","l":"removeTool(String)","u":"removeTool(java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServer","l":"removeTool(String)","u":"removeTool(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"replace(K, V)","u":"replace(K,V)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"replace(K, V, V)","u":"replace(K,V,V)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"replay(Object)","u":"replay(java.lang.Object)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"requestBuilder(HttpRequest.Builder)","u":"requestBuilder(java.net.http.HttpRequest.Builder)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"requestBuilder(HttpRequest.Builder)","u":"requestBuilder(java.net.http.HttpRequest.Builder)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"requestedSchema()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest.Builder","l":"requestedSchema(Map<String, Object>)","u":"requestedSchema(java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"requestPermission(AcpSchema.RequestPermissionRequest)","u":"requestPermission(org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"requestPermission(AcpSchema.RequestPermissionRequest)","u":"requestPermission(org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionOutcome","l":"RequestPermissionOutcome(AcpSchema.Outcome, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.Outcome,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"RequestPermissionRequest(Map<String, Object>, AcpSchema.PermissionOption[], String, AcpSchema.ToolCallUpdate)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.PermissionOption[],java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallUpdate)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionResponse","l":"RequestPermissionResponse(Map<String, Object>, AcpSchema.RequestPermissionOutcome)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.RequestPermissionOutcome)"},{"p":"org.eclipse.mcp","c":"Activator","l":"requestServerRestart()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"requestTimeout(Duration)","u":"requestTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"requestTimeout(Duration)","u":"requestTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"requestTimeout(Duration)","u":"requestTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"requestTimeout(Duration)","u":"requestTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"requestTimeout(Duration)","u":"requestTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"requestTimeout(Duration)","u":"requestTimeout(java.time.Duration)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"required()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"required()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpArg","l":"required()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpToolParam","l":"required()"},{"p":"org.eclipse.mcp.platform","c":"ResaourceTemplates","l":"ResaourceTemplates()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ClassUtils","l":"resolvePrimitiveIfNecessary(Class<?>)","u":"resolvePrimitiveIfNecessary(java.lang.Class)"},{"p":"io.modelcontextprotocol.util","c":"Utils","l":"resolveUri(URI, String)","u":"resolveUri(java.net.URI,java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"resource_link()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncResourceSpecification","l":"resource()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncResourceSpecification","l":"resource()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncResourceSpecification","l":"resource()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncResourceSpecification","l":"resource()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"resource()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"resource()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"resource()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"Resource(String, String, String, String, Long, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"Resource(String, String, String, String, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"Resource(String, String, String, String, String, Long, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"Resource(String, String, String, String, String, Long, McpSchema.Annotations, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.modelcontextprotocol.spec.McpSchema.Annotations,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ResourceCapabilities","l":"ResourceCapabilities(Boolean, Boolean)","u":"%3Cinit%3E(java.lang.Boolean,java.lang.Boolean)"},{"p":"org.eclipse.mcp.platform","c":"ResourceController","l":"ResourceController()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"ResourceLink(Map<String, Object>, AcpSchema.Annotations, String, String, String, Integer, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"ResourceLink(String, String, String, String, Long, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"ResourceLink(String, String, String, String, String, Long, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"ResourceLink(String, String, String, String, String, Long, McpSchema.Annotations, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,io.modelcontextprotocol.spec.McpSchema.Annotations,java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"ResourceLinkBlock(Map<String, Object>, AcpSchema.Annotations, String, String, String, Integer, String, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"ResourceReference(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"ResourceReference(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"resources()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"resources()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"resources(Boolean, Boolean)","u":"resources(java.lang.Boolean,java.lang.Boolean)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"resources(List<McpServerFeatures.AsyncResourceSpecification>)","u":"resources(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"resources(List<McpServerFeatures.SyncResourceSpecification>)","u":"resources(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"resources(List<McpStatelessServerFeatures.AsyncResourceSpecification>)","u":"resources(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"resources(List<McpStatelessServerFeatures.SyncResourceSpecification>)","u":"resources(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"resources(Map<String, McpServerFeatures.AsyncResourceSpecification>)","u":"resources(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"resources(Map<String, McpServerFeatures.SyncResourceSpecification>)","u":"resources(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"resources(Map<String, McpStatelessServerFeatures.AsyncResourceSpecification>)","u":"resources(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"resources(Map<String, McpStatelessServerFeatures.SyncResourceSpecification>)","u":"resources(java.util.Map)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"resources(McpServerFeatures.AsyncResourceSpecification...)","u":"resources(io.modelcontextprotocol.server.McpServerFeatures.AsyncResourceSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"resources(McpServerFeatures.SyncResourceSpecification...)","u":"resources(io.modelcontextprotocol.server.McpServerFeatures.SyncResourceSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"resources(McpStatelessServerFeatures.AsyncResourceSpecification...)","u":"resources(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncResourceSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"resources(McpStatelessServerFeatures.SyncResourceSpecification...)","u":"resources(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncResourceSpecification...)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"resourcesChangeConsumer(Consumer<List<McpSchema.Resource>>)","u":"resourcesChangeConsumer(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"resourcesChangeConsumer(Function<List<McpSchema.Resource>, Mono<Void>>)","u":"resourcesChangeConsumer(java.util.function.Function)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema","l":"ResourceSchema()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"resourcesUpdateConsumer(Function<List<McpSchema.ResourceContents>, Mono<Void>>)","u":"resourcesUpdateConsumer(java.util.function.Function)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"ResourcesUpdatedNotification(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"ResourcesUpdatedNotification(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"ResourceTemplate(String, String, String, String, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"ResourceTemplate(String, String, String, String, String, McpSchema.Annotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.Annotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"ResourceTemplate(String, String, String, String, String, McpSchema.Annotations, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.Annotations,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"resourceTemplates()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"resourceTemplates(List<McpSchema.ResourceTemplate>)","u":"resourceTemplates(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"resourceTemplates(List<McpSchema.ResourceTemplate>)","u":"resourceTemplates(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"resourceTemplates(List<McpSchema.ResourceTemplate>)","u":"resourceTemplates(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"resourceTemplates(List<McpSchema.ResourceTemplate>)","u":"resourceTemplates(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"resourceTemplates(McpSchema.ResourceTemplate...)","u":"resourceTemplates(io.modelcontextprotocol.spec.McpSchema.ResourceTemplate...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"resourceTemplates(McpSchema.ResourceTemplate...)","u":"resourceTemplates(io.modelcontextprotocol.spec.McpSchema.ResourceTemplate...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"resourceTemplates(McpSchema.ResourceTemplate...)","u":"resourceTemplates(io.modelcontextprotocol.spec.McpSchema.ResourceTemplate...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"resourceTemplates(McpSchema.ResourceTemplate...)","u":"resourceTemplates(io.modelcontextprotocol.spec.McpSchema.ResourceTemplate...)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"responseError(HttpServletResponse, int, McpError)","u":"responseError(jakarta.servlet.http.HttpServletResponse,int,io.modelcontextprotocol.spec.McpError)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"responseStream(McpSchema.JSONRPCRequest, McpStreamableServerTransport)","u":"responseStream(io.modelcontextprotocol.spec.McpSchema.JSONRPCRequest,io.modelcontextprotocol.spec.McpStreamableServerTransport)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"result()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport.Builder","l":"resumableStreams(boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"returnDirect()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"role()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptMessage","l":"role()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SamplingMessage","l":"role()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"role(McpSchema.Role)","u":"role(io.modelcontextprotocol.spec.McpSchema.Role)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"Root(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"Root(String, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.RootCapabilities","l":"RootCapabilities(Boolean)","u":"%3Cinit%3E(java.lang.Boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"roots()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"roots()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Builder","l":"roots(Boolean)","u":"roots(java.lang.Boolean)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"roots(List<McpSchema.Root>)","u":"roots(java.util.List)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"roots(List<McpSchema.Root>)","u":"roots(java.util.List)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"roots(McpSchema.Root...)","u":"roots(io.modelcontextprotocol.spec.McpSchema.Root...)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"roots(McpSchema.Root...)","u":"roots(io.modelcontextprotocol.spec.McpSchema.Root...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"rootsChangeHandler(BiConsumer<McpSyncServerExchange, List<McpSchema.Root>>)","u":"rootsChangeHandler(java.util.function.BiConsumer)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"rootsChangeHandler(BiFunction<McpAsyncServerExchange, List<McpSchema.Root>, Mono<Void>>)","u":"rootsChangeHandler(java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"rootsChangeHandlers(BiConsumer<McpSyncServerExchange, List<McpSchema.Root>>...)","u":"rootsChangeHandlers(java.util.function.BiConsumer...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"rootsChangeHandlers(BiFunction<McpAsyncServerExchange, List<McpSchema.Root>, Mono<Void>>...)","u":"rootsChangeHandlers(java.util.function.BiFunction...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"rootsChangeHandlers(List<BiConsumer<McpSyncServerExchange, List<McpSchema.Root>>>)","u":"rootsChangeHandlers(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"rootsChangeHandlers(List<BiFunction<McpAsyncServerExchange, List<McpSchema.Root>, Mono<Void>>>)","u":"rootsChangeHandlers(java.util.List)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"rootsListChangedNotification()"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"rootsListChangedNotification()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientThread","l":"run()"},{"p":"org.eclipse.mcp.acp.view.actions","c":"AddToChatAction","l":"run()"},{"p":"org.eclipse.mcp.acp.view.actions","c":"SetAcpModelAction","l":"run()"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"runWithEvent(Event)","u":"runWithEvent(org.eclipse.swt.widgets.Event)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Builder","l":"sampling()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"sampling()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Sampling","l":"Sampling()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"sampling(Function<McpSchema.CreateMessageRequest, McpSchema.CreateMessageResult>)","u":"sampling(java.util.function.Function)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"sampling(Function<McpSchema.CreateMessageRequest, Mono<McpSchema.CreateMessageResult>>)","u":"sampling(java.util.function.Function)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncSamplingSpecification","l":"samplingHandler()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncSamplingSpecification","l":"samplingHandler()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SamplingMessage","l":"SamplingMessage(McpSchema.Role, McpSchema.Content)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Role,io.modelcontextprotocol.spec.McpSchema.Content)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"sanitize(String)","u":"sanitize(java.lang.String)"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"saveEditor(String)","u":"saveEditor(java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler.Builder","l":"scheduler(Scheduler)","u":"scheduler(reactor.core.scheduler.Scheduler)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"search"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"sendMessage(McpSchema.JSONRPCMessage)","u":"sendMessage(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"sendMessage(McpSchema.JSONRPCMessage)","u":"sendMessage(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage)"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"sendMessage(McpSchema.JSONRPCMessage)","u":"sendMessage(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransport","l":"sendMessage(McpSchema.JSONRPCMessage)","u":"sendMessage(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerTransport","l":"sendMessage(McpSchema.JSONRPCMessage, String)","u":"sendMessage(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSession","l":"sendNotification(String)","u":"sendNotification(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession","l":"sendNotification(String, Object)","u":"sendNotification(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"sendNotification(String, Object)","u":"sendNotification(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpSession","l":"sendNotification(String, Object)","u":"sendNotification(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"sendNotification(String, Object)","u":"sendNotification(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"sendNotification(String, Object)","u":"sendNotification(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"sendNotification(String, Object)","u":"sendNotification(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientSession","l":"sendRequest(String, Object, TypeReference<T>)","u":"sendRequest(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"sendRequest(String, Object, TypeReference<T>)","u":"sendRequest(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpSession","l":"sendRequest(String, Object, TypeReference<T>)","u":"sendRequest(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"sendRequest(String, Object, TypeReference<T>)","u":"sendRequest(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"sendRequest(String, Object, TypeReference<T>)","u":"sendRequest(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"sendRequest(String, Object, TypeReference<T>)","u":"sendRequest(java.lang.String,java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"ServerCapabilities(McpSchema.ServerCapabilities.CompletionCapabilities, Map<String, Object>, McpSchema.ServerCapabilities.LoggingCapabilities, McpSchema.ServerCapabilities.PromptCapabilities, McpSchema.ServerCapabilities.ResourceCapabilities, McpSchema.ServerCapabilities.ToolCapabilities)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.ServerCapabilities.CompletionCapabilities,java.util.Map,io.modelcontextprotocol.spec.McpSchema.ServerCapabilities.LoggingCapabilities,io.modelcontextprotocol.spec.McpSchema.ServerCapabilities.PromptCapabilities,io.modelcontextprotocol.spec.McpSchema.ServerCapabilities.ResourceCapabilities,io.modelcontextprotocol.spec.McpSchema.ServerCapabilities.ToolCapabilities)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"serverInfo()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"serverInfo(McpSchema.Implementation)","u":"serverInfo(io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"serverInfo(McpSchema.Implementation)","u":"serverInfo(io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"serverInfo(McpSchema.Implementation)","u":"serverInfo(io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"serverInfo(McpSchema.Implementation)","u":"serverInfo(io.modelcontextprotocol.spec.McpSchema.Implementation)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"serverInfo(String, String)","u":"serverInfo(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"serverInfo(String, String)","u":"serverInfo(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"serverInfo(String, String)","u":"serverInfo(java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"serverInfo(String, String)","u":"serverInfo(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"ServerManager()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"serverStarted(String)","u":"serverStarted(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"ServerManager.IServerListener","l":"serverStarted(String)","u":"serverStarted(java.lang.String)"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"serverStopped()"},{"p":"org.eclipse.mcp.internal","c":"ServerManager.IServerListener","l":"serverStopped()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionInit","l":"session()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentMessageChunk","l":"SessionAgentMessageChunk(AcpSchema.ContentBlock, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentThoughtChunk","l":"SessionAgentThoughtChunk(AcpSchema.ContentBlock, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAvailableCommandsUpdate","l":"SessionAvailableCommandsUpdate(AcpSchema.AvailableCommand[], String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.AvailableCommand[],java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"sessionId()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"sessionId()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportSession","l":"sessionId()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportSession","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CancelNotification","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"sessionId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"SessionMode(Map<String, Object>, String, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"SessionModelState(Map<String, Object>, AcpSchema.ModelInfo[], String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ModelInfo[],java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"SessionModeState(Map<String, Object>, AcpSchema.SessionMode[], String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.SessionMode[],java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeUpdate","l":"SessionModeUpdate(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"SessionNotification(Map<String, Object>, String, AcpSchema.SessionUpdate)","u":"%3Cinit%3E(java.util.Map,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.SessionUpdate)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"SessionPlan(Map<String, Object>, AcpSchema.PlanEntry[], String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.PlanEntry[],java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"SessionToolCall(Map<String, Object>, AcpSchema.ToolCallContent[], AcpSchema.ToolKind, AcpSchema.ToolCallLocation[], Object, Object, String, AcpSchema.ToolCallStatus, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallContent[],org.eclipse.mcp.acp.protocol.AcpSchema.ToolKind,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallLocation[],java.lang.Object,java.lang.Object,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallStatus,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"SessionToolCallUpdate(Map<String, Object>, AcpSchema.ToolCallContent[], AcpSchema.ToolKind, AcpSchema.ToolCallLocation[], Object, Object, String, AcpSchema.ToolCallStatus, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallContent[],org.eclipse.mcp.acp.protocol.AcpSchema.ToolKind,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallLocation[],java.lang.Object,java.lang.Object,java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallStatus,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentMessageChunk","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentThoughtChunk","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAvailableCommandsUpdate","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeUpdate","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionUserMessageChunk","l":"sessionUpdate()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionUserMessageChunk","l":"SessionUserMessageChunk(AcpSchema.ContentBlock, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpAgent","l":"set_mode(AcpSchema.SetSessionModeRequest)","u":"set_mode(org.eclipse.mcp.acp.protocol.AcpSchema.SetSessionModeRequest)"},{"p":"org.eclipse.mcp.acp.view.actions","c":"SetAcpModelAction","l":"SetAcpModelAction(IAgentService)","u":"%3Cinit%3E(org.eclipse.mcp.acp.agent.IAgentService)"},{"p":"org.eclipse.mcp.acp","c":"AcpService","l":"setAcpService(AcpView, IAgentService)","u":"setAcpService(org.eclipse.mcp.acp.view.AcpView,org.eclipse.mcp.acp.agent.IAgentService)"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"setAuthenticateResponse(AcpSchema.AuthenticateResponse)","u":"setAuthenticateResponse(org.eclipse.mcp.acp.protocol.AcpSchema.AuthenticateResponse)"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"setAuthenticateResponse(AcpSchema.AuthenticateResponse)","u":"setAuthenticateResponse(org.eclipse.mcp.acp.protocol.AcpSchema.AuthenticateResponse)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setBorderColor(Color)","u":"setBorderColor(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpSessionModel","l":"setBrowser(AcpBrowser)","u":"setBrowser(org.eclipse.mcp.acp.view.AcpBrowser)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setChipsBackground(Color)","u":"setChipsBackground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setCloseButtonBackground(Color)","u":"setCloseButtonBackground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setCloseButtonForeground(Color)","u":"setCloseButtonForeground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setCloseButtonHoverBackground(Color)","u":"setCloseButtonHoverBackground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setCloseButtonHoverForeground(Color)","u":"setCloseButtonHoverForeground(org.eclipse.swt.graphics.Color)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"setExceptionHandler(Consumer<Throwable>)","u":"setExceptionHandler(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.spec","c":"McpClientTransport","l":"setExceptionHandler(Consumer<Throwable>)","u":"setExceptionHandler(java.util.function.Consumer)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpView","l":"setFocus()"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setHoverBackground(Color)","u":"setHoverBackground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setHoverBorderColor(Color)","u":"setHoverBorderColor(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setHoverForeground(Color)","u":"setHoverForeground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setHoverImage(Image)","u":"setHoverImage(org.eclipse.swt.graphics.Image)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setImage(Image)","u":"setImage(org.eclipse.swt.graphics.Image)"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"setInitializeRequest(AcpSchema.InitializeRequest)","u":"setInitializeRequest(org.eclipse.mcp.acp.protocol.AcpSchema.InitializeRequest)"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"setInitializeRequest(AcpSchema.InitializeRequest)","u":"setInitializeRequest(org.eclipse.mcp.acp.protocol.AcpSchema.InitializeRequest)"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"setInitializeResponse(AcpSchema.InitializeResponse)","u":"setInitializeResponse(org.eclipse.mcp.acp.protocol.AcpSchema.InitializeResponse)"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"setInitializeResponse(AcpSchema.InitializeResponse)","u":"setInitializeResponse(org.eclipse.mcp.acp.protocol.AcpSchema.InitializeResponse)"},{"p":"org.eclipse.mcp.acp.protocol","c":"StdinoutMessageProducer","l":"setInput(InputStream)","u":"setInput(java.io.InputStream)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SetLevelRequest","l":"SetLevelRequest(McpSchema.LoggingLevel)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"setLoggingLevel(McpSchema.LoggingLevel)","u":"setLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"setLoggingLevel(McpSchema.LoggingLevel)","u":"setLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"setMcpHandler(McpStatelessServerHandler)","u":"setMcpHandler(io.modelcontextprotocol.server.McpStatelessServerHandler)"},{"p":"io.modelcontextprotocol.spec","c":"McpStatelessServerTransport","l":"setMcpHandler(McpStatelessServerHandler)","u":"setMcpHandler(io.modelcontextprotocol.server.McpStatelessServerHandler)"},{"p":"io.modelcontextprotocol.spec","c":"McpLoggableSession","l":"setMinLoggingLevel(McpSchema.LoggingLevel)","u":"setMinLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerSession","l":"setMinLoggingLevel(McpSchema.LoggingLevel)","u":"setMinLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionStream","l":"setMinLoggingLevel(McpSchema.LoggingLevel)","u":"setMinLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession","l":"setMinLoggingLevel(McpSchema.LoggingLevel)","u":"setMinLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"io.modelcontextprotocol.spec","c":"MissingMcpTransportSession","l":"setMinLoggingLevel(McpSchema.LoggingLevel)","u":"setMinLoggingLevel(io.modelcontextprotocol.spec.McpSchema.LoggingLevel)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setPushedStateBackground(Color)","u":"setPushedStateBackground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setPushedStateBorderColor(Color)","u":"setPushedStateBorderColor(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setPushedStateForeground(Color)","u":"setPushedStateForeground(org.eclipse.swt.graphics.Color)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setPushImage(Image)","u":"setPushImage(org.eclipse.swt.graphics.Image)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setSelection(boolean)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"setSessionFactory(McpServerSession.Factory)","u":"setSessionFactory(io.modelcontextprotocol.spec.McpServerSession.Factory)"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"setSessionFactory(McpServerSession.Factory)","u":"setSessionFactory(io.modelcontextprotocol.spec.McpServerSession.Factory)"},{"p":"io.modelcontextprotocol.spec","c":"McpServerTransportProvider","l":"setSessionFactory(McpServerSession.Factory)","u":"setSessionFactory(io.modelcontextprotocol.spec.McpServerSession.Factory)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"setSessionFactory(McpStreamableServerSession.Factory)","u":"setSessionFactory(io.modelcontextprotocol.spec.McpStreamableServerSession.Factory)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerTransportProvider","l":"setSessionFactory(McpStreamableServerSession.Factory)","u":"setSessionFactory(io.modelcontextprotocol.spec.McpStreamableServerSession.Factory)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"SetSessionModelRequest(Map<String, Object>, AcpSchema.SessionMode, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.SessionMode,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelResponse","l":"SetSessionModelResponse(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"SetSessionModeRequest(Map<String, Object>, AcpSchema.SessionMode, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.SessionMode,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeResponse","l":"SetSessionModeResponse(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"setStdErrorHandler(Consumer<String>)","u":"setStdErrorHandler(java.util.function.Consumer)"},{"p":"org.eclipse.mcp.acp.view","c":"Chips","l":"setText(String)","u":"setText(java.lang.String)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"setText(String)","u":"setText(java.lang.String)"},{"p":"org.eclipse.mcp","c":"IMCPServices","l":"setToolVisibility(String, boolean)","u":"setToolVisibility(java.lang.String,boolean)"},{"p":"org.eclipse.mcp.internal","c":"MCPServices","l":"setToolVisibility(String, boolean)","u":"setToolVisibility(java.lang.String,boolean)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"setup(BundleContext)","u":"setup(org.osgi.framework.BundleContext)"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"setVisibility(String, boolean)","u":"setVisibility(java.lang.String,boolean)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"severity()"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler","l":"shutdown()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"signal()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"signal()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"size()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContent","l":"size()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"size()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"size()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"size()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap","l":"size()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"size(Long)","u":"size(java.lang.Long)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"size(Long)","u":"size(java.lang.Long)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap.ReferenceType","l":"SOFT"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"speedPriority()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences.Builder","l":"speedPriority(Double)","u":"speedPriority(java.lang.Double)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"SpringAiSchemaModule","l":"SpringAiSchemaModule(SpringAiSchemaModule.Option...)","u":"%3Cinit%3E(org.springaicommunity.mcp.method.tool.utils.SpringAiSchemaModule.Option...)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"sse()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport.Builder","l":"sseEndpoint(String)","u":"sseEndpoint(java.lang.String)"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider.Builder","l":"sseEndpoint(String)","u":"sseEndpoint(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"SseTransport(AcpSchema.HttpHeader[], String, String, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.HttpHeader[],java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler","l":"start()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"start()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"start()"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"start()"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"start()"},{"p":"org.eclipse.mcp","c":"Activator","l":"start(BundleContext)","u":"start(org.osgi.framework.BundleContext)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"startLine()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientLauncher","l":"startListening()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpStreamableServerSessionFactory","l":"startSession(McpSchema.InitializeRequest)","u":"startSession(io.modelcontextprotocol.spec.McpSchema.InitializeRequest)"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.Factory","l":"startSession(McpSchema.InitializeRequest)","u":"startSession(io.modelcontextprotocol.spec.McpSchema.InitializeRequest)"},{"p":"org.eclipse.mcp.internal","c":"Startup","l":"Startup()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"StatelessAsyncSpecification(McpStatelessServerTransport)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpStatelessServerTransport)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"StatelessSyncSpecification(McpStatelessServerTransport)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpStatelessServerTransport)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"status()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"status()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"status()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"status()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"status()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClientThread","l":"statusChanged()"},{"p":"org.eclipse.mcp.acp.protocol","c":"StdinoutMessageProducer","l":"StdinoutMessageProducer(InputStream, MessageJsonHandler)","u":"%3Cinit%3E(java.io.InputStream,org.eclipse.lsp4j.jsonrpc.json.MessageJsonHandler)"},{"p":"org.eclipse.mcp.acp.protocol","c":"StdinoutMessageProducer","l":"StdinoutMessageProducer(InputStream, MessageJsonHandler, MessageIssueHandler)","u":"%3Cinit%3E(java.io.InputStream,org.eclipse.lsp4j.jsonrpc.json.MessageJsonHandler,org.eclipse.lsp4j.jsonrpc.MessageIssueHandler)"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"StdioClientTransport(ServerParameters)","u":"%3Cinit%3E(io.modelcontextprotocol.client.transport.ServerParameters)"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"StdioClientTransport(ServerParameters, ObjectMapper)","u":"%3Cinit%3E(io.modelcontextprotocol.client.transport.ServerParameters,com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"StdioServerTransportProvider()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"StdioServerTransportProvider(ObjectMapper)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper)"},{"p":"io.modelcontextprotocol.server.transport","c":"StdioServerTransportProvider","l":"StdioServerTransportProvider(ObjectMapper, InputStream, OutputStream)","u":"%3Cinit%3E(com.fasterxml.jackson.databind.ObjectMapper,java.io.InputStream,java.io.OutputStream)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"StdioTransport(String[], String, AcpSchema.EnvVariable[], String)","u":"%3Cinit%3E(java.lang.String[],java.lang.String,org.eclipse.mcp.acp.protocol.AcpSchema.EnvVariable[],java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.StopReason","l":"STOP_SEQUENCE"},{"p":"io.modelcontextprotocol.util","c":"KeepAliveScheduler","l":"stop()"},{"p":"org.eclipse.mcp.acp.agent","c":"AbstractService","l":"stop()"},{"p":"org.eclipse.mcp.acp.agent","c":"IAgentService","l":"stop()"},{"p":"org.eclipse.mcp.internal","c":"MCPServer","l":"stop()"},{"p":"org.eclipse.mcp.internal","c":"ServerManager","l":"stop()"},{"p":"org.eclipse.mcp","c":"Activator","l":"stop(BundleContext)","u":"stop(org.osgi.framework.BundleContext)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"stopReason()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptResponse","l":"stopReason()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.Builder","l":"stopReason(McpSchema.CreateMessageResult.StopReason)","u":"stopReason(io.modelcontextprotocol.spec.McpSchema.CreateMessageResult.StopReason)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"stopSequences()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"stopSequences(List<String>)","u":"stopSequences(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StreamableServerAsyncSpecification","l":"StreamableServerAsyncSpecification(McpStreamableServerTransportProvider)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpStreamableServerTransportProvider)"},{"p":"io.modelcontextprotocol.spec","c":"DefaultMcpTransportStream","l":"streamId()"},{"p":"io.modelcontextprotocol.spec","c":"McpTransportStream","l":"streamId()"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReturnMode","l":"STRUCTURED"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"structuredContent()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"structuredContent(Map<String, Object>)","u":"structuredContent(java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"structuredContent(String)","u":"structuredContent(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ResourceCapabilities","l":"subscribe()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"SubscribeRequest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"SubscribeRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"subscribeResource(McpSchema.SubscribeRequest)","u":"subscribeResource(io.modelcontextprotocol.spec.McpSchema.SubscribeRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"subscribeResource(McpSchema.SubscribeRequest)","u":"subscribeResource(io.modelcontextprotocol.spec.McpSchema.SubscribeRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"switch_mode"},{"p":"io.modelcontextprotocol.client","c":"McpClient","l":"sync(McpClientTransport)","u":"sync(io.modelcontextprotocol.spec.McpClientTransport)"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"sync(McpServerTransportProvider)","u":"sync(io.modelcontextprotocol.spec.McpServerTransportProvider)"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"sync(McpStatelessServerTransport)","u":"sync(io.modelcontextprotocol.spec.McpStatelessServerTransport)"},{"p":"io.modelcontextprotocol.server","c":"McpServer","l":"sync(McpStreamableServerTransportProvider)","u":"sync(io.modelcontextprotocol.spec.McpStreamableServerTransportProvider)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncCompletionSpecification","l":"SyncCompletionSpecification(McpSchema.CompleteReference, BiFunction<McpSyncServerExchange, McpSchema.CompleteRequest, McpSchema.CompleteResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncCompletionSpecification","l":"SyncCompletionSpecification(McpSchema.CompleteReference, BiFunction<McpTransportContext, McpSchema.CompleteRequest, McpSchema.CompleteResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.CompleteReference,java.util.function.BiFunction)"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncElicitationSpecification","l":"SyncElicitationSpecification(String, Function<McpSchema.ElicitRequest, McpSchema.ElicitResult>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function)"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncLoggingSpecification","l":"SyncLoggingSpecification(String, Consumer<McpSchema.LoggingMessageNotification>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Consumer)"},{"p":"org.springaicommunity.mcp.provider.complete","c":"SyncMcpCompletionProvider","l":"SyncMcpCompletionProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.elicitation","c":"SyncMcpElicitationProvider","l":"SyncMcpElicitationProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.logging","c":"SyncMcpLogginProvider","l":"SyncMcpLogginProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.progress","c":"SyncMcpProgressProvider","l":"SyncMcpProgressProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.prompt","c":"SyncMcpPromptProvider","l":"SyncMcpPromptProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.resource","c":"SyncMcpResourceProvider","l":"SyncMcpResourceProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.sampling","c":"SyncMcpSamplingProvider","l":"SyncMcpSamplingProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.method.tool","c":"SyncMcpToolMethodCallback","l":"SyncMcpToolMethodCallback(ReturnMode, Method, Object)","u":"%3Cinit%3E(org.springaicommunity.mcp.method.tool.ReturnMode,java.lang.reflect.Method,java.lang.Object)"},{"p":"org.springaicommunity.mcp.provider.tool","c":"SyncMcpToolProvider","l":"SyncMcpToolProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncProgressSpecification","l":"SyncProgressSpecification(String, Consumer<McpSchema.ProgressNotification>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncPromptSpecification","l":"SyncPromptSpecification(McpSchema.Prompt, BiFunction<McpSyncServerExchange, McpSchema.GetPromptRequest, McpSchema.GetPromptResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Prompt,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncPromptSpecification","l":"SyncPromptSpecification(McpSchema.Prompt, BiFunction<McpTransportContext, McpSchema.GetPromptRequest, McpSchema.GetPromptResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Prompt,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncResourceSpecification","l":"SyncResourceSpecification(McpSchema.Resource, BiFunction<McpSyncServerExchange, McpSchema.ReadResourceRequest, McpSchema.ReadResourceResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Resource,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncResourceSpecification","l":"SyncResourceSpecification(McpSchema.Resource, BiFunction<McpTransportContext, McpSchema.ReadResourceRequest, McpSchema.ReadResourceResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Resource,java.util.function.BiFunction)"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncSamplingSpecification","l":"SyncSamplingSpecification(String, Function<McpSchema.CreateMessageRequest, McpSchema.CreateMessageResult>)","u":"%3Cinit%3E(java.lang.String,java.util.function.Function)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"SyncSpecification()","u":"%3Cinit%3E()"},{"p":"org.springaicommunity.mcp.provider.complete","c":"SyncStatelessMcpCompleteProvider","l":"SyncStatelessMcpCompleteProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.prompt","c":"SyncStatelessMcpPromptProvider","l":"SyncStatelessMcpPromptProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.provider.resource","c":"SyncStatelessMcpResourceProvider","l":"SyncStatelessMcpResourceProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"org.springaicommunity.mcp.method.tool","c":"SyncStatelessMcpToolMethodCallback","l":"SyncStatelessMcpToolMethodCallback(ReturnMode, Method, Object)","u":"%3Cinit%3E(org.springaicommunity.mcp.method.tool.ReturnMode,java.lang.reflect.Method,java.lang.Object)"},{"p":"org.springaicommunity.mcp.provider.tool","c":"SyncStatelessMcpToolProvider","l":"SyncStatelessMcpToolProvider(List<Object>)","u":"%3Cinit%3E(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"SyncToolSpecification(McpSchema.Tool, BiFunction<McpSyncServerExchange, Map<String, Object>, McpSchema.CallToolResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"SyncToolSpecification(McpSchema.Tool, BiFunction<McpSyncServerExchange, Map<String, Object>, McpSchema.CallToolResult>, BiFunction<McpSyncServerExchange, McpSchema.CallToolRequest, McpSchema.CallToolResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"SyncToolSpecification(McpSchema.Tool, BiFunction<McpTransportContext, McpSchema.CallToolRequest, McpSchema.CallToolResult>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"systemPrompt()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"systemPrompt(String)","u":"systemPrompt(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"Task"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Tasks","l":"tasks()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Tasks","l":"Tasks(ResourceSchema.Marker[])","u":"%3Cinit%3E(org.eclipse.mcp.platform.resource.ResourceSchema.Marker[])"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"temperature()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.Builder","l":"temperature(Double)","u":"temperature(java.lang.Double)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"terminal()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"terminalCreate(AcpSchema.CreateTerminalRequest)","u":"terminalCreate(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"terminalCreate(AcpSchema.CreateTerminalRequest)","u":"terminalCreate(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"TerminalExitStatus(Map<String, Object>, Integer, String)","u":"%3Cinit%3E(java.util.Map,java.lang.Integer,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalResponse","l":"terminalId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"terminalId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"terminalId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"terminalId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentTerminal","l":"terminalId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"terminalId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"terminalKill(AcpSchema.KillTerminalCommandRequest)","u":"terminalKill(org.eclipse.mcp.acp.protocol.AcpSchema.KillTerminalCommandRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"terminalKill(AcpSchema.KillTerminalCommandRequest)","u":"terminalKill(org.eclipse.mcp.acp.protocol.AcpSchema.KillTerminalCommandRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"terminalOutput(AcpSchema.TerminalOutputRequest)","u":"terminalOutput(org.eclipse.mcp.acp.protocol.AcpSchema.TerminalOutputRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"terminalOutput(AcpSchema.TerminalOutputRequest)","u":"terminalOutput(org.eclipse.mcp.acp.protocol.AcpSchema.TerminalOutputRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"TerminalOutputRequest(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"TerminalOutputResponse(Map<String, Object>, AcpSchema.TerminalExitStatus, String, Boolean)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.TerminalExitStatus,java.lang.String,java.lang.Boolean)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"terminalRelease(AcpSchema.WaitForTerminalExitRequest)","u":"terminalRelease(org.eclipse.mcp.acp.protocol.AcpSchema.WaitForTerminalExitRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"terminalRelease(AcpSchema.WaitForTerminalExitRequest)","u":"terminalRelease(org.eclipse.mcp.acp.protocol.AcpSchema.WaitForTerminalExitRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"terminalWaitForExit(AcpSchema.CreateTerminalRequest)","u":"terminalWaitForExit(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"terminalWaitForExit(AcpSchema.CreateTerminalRequest)","u":"terminalWaitForExit(org.eclipse.mcp.acp.protocol.AcpSchema.CreateTerminalRequest)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"Text"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback.ContentType","l":"TEXT"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReturnMode","l":"TEXT"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"TEXT_EVENT_STREAM"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"TEXT_EVENT_STREAM"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"text()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"text()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"text()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"text()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"text()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"text()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"text()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"TextBlock(Map<String, Object>, AcpSchema.Annotations, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"TextContent(List<McpSchema.Role>, Double, String)","u":"%3Cinit%3E(java.util.List,java.lang.Double,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult.Builder","l":"textContent(List<String>)","u":"textContent(java.util.List)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"TextContent(Map<String, Object>, AcpSchema.Annotations, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.Annotations,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"TextContent(McpSchema.Annotations, String)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"TextContent(McpSchema.Annotations, String, Map<String, Object>)","u":"%3Cinit%3E(io.modelcontextprotocol.spec.McpSchema.Annotations,java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"TextContent(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextEditorSelection","l":"TextEditorSelection(ResourceSchema.Editor, ResourceSchema.TextSelection)","u":"%3Cinit%3E(org.eclipse.mcp.platform.resource.ResourceSchema.Editor,org.eclipse.mcp.platform.resource.ResourceSchema.TextSelection)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"TextReplacement(String, int, int)","u":"%3Cinit%3E(java.lang.String,int,int)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"TextResourceContents(Map<String, Object>, String, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"TextResourceContents(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"TextResourceContents(String, String, String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.util.Map)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextEditorSelection","l":"textSelection()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"TextSelection(int, int, int, int, String)","u":"%3Cinit%3E(int,int,int,int,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"think"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.ContextInclusionStrategy","l":"THIS_SERVER"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BaseMetadata","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"title()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"title()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"title()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"title()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"title()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"title()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"title()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpTool.McpAnnotations","l":"title()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"title(String)","u":"title(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"title(String)","u":"title(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool.Builder","l":"title(String)","u":"title(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"toContent()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"toContent()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"toContent()"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"toContent()"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"toJson()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"toJson()"},{"p":"org.eclipse.mcp.platform.resource","c":"MarkerAdapter","l":"toJson()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"toJson()"},{"p":"org.eclipse.mcp.resource","c":"IResourceAdapter","l":"toJson()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonParser","l":"toJson(Object)","u":"toJson(java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"tool()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"tool()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"tool()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"tool()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification.Builder","l":"tool(McpSchema.Tool)","u":"tool(io.modelcontextprotocol.spec.McpSchema.Tool)"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification.Builder","l":"tool(McpSchema.Tool)","u":"tool(io.modelcontextprotocol.spec.McpSchema.Tool)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification.Builder","l":"tool(McpSchema.Tool)","u":"tool(io.modelcontextprotocol.spec.McpSchema.Tool)"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification.Builder","l":"tool(McpSchema.Tool)","u":"tool(io.modelcontextprotocol.spec.McpSchema.Tool)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"tool(McpSchema.Tool, BiFunction<McpAsyncServerExchange, Map<String, Object>, Mono<McpSchema.CallToolResult>>)","u":"tool(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"tool(McpSchema.Tool, BiFunction<McpSyncServerExchange, Map<String, Object>, McpSchema.CallToolResult>)","u":"tool(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"Tool(String, String, McpSchema.JsonSchema, McpSchema.ToolAnnotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.JsonSchema,io.modelcontextprotocol.spec.McpSchema.ToolAnnotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"Tool(String, String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"Tool(String, String, String, McpSchema.JsonSchema, Map<String, Object>, McpSchema.ToolAnnotations, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.JsonSchema,java.util.Map,io.modelcontextprotocol.spec.McpSchema.ToolAnnotations,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"Tool(String, String, String, McpSchema.ToolAnnotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.ToolAnnotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"Tool(String, String, String, String, McpSchema.ToolAnnotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.ToolAnnotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"Tool(String, String, String, String, String, McpSchema.ToolAnnotations)","u":"%3Cinit%3E(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.modelcontextprotocol.spec.McpSchema.ToolAnnotations)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"ToolAnnotations(String, Boolean, Boolean, Boolean, Boolean, Boolean)","u":"%3Cinit%3E(java.lang.String,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean,java.lang.Boolean)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"ToolbarAgentSelector","l":"ToolbarAgentSelector(AcpView)","u":"%3Cinit%3E(org.eclipse.mcp.acp.view.AcpView)"},{"p":"org.eclipse.mcp.acp.view","c":"ToolbarButtonContributor","l":"ToolbarButtonContributor()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"ToolbarModelSelector","l":"ToolbarModelSelector(AcpView)","u":"%3Cinit%3E(org.eclipse.mcp.acp.view.AcpView)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"ToolbarModeSelector","l":"ToolbarModeSelector(AcpView)","u":"%3Cinit%3E(org.eclipse.mcp.acp.view.AcpView)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"ToolbarSessionSelector","l":"ToolbarSessionSelector(AcpView)","u":"%3Cinit%3E(org.eclipse.mcp.acp.view.AcpView)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"toolCall()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"ToolCall(Map<String, Object>, AcpSchema.ToolCallContent[], AcpSchema.ToolKind, AcpSchema.ToolCallLocation[], Object, Object, AcpSchema.ToolCallStatus, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallContent[],org.eclipse.mcp.acp.protocol.AcpSchema.ToolKind,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallLocation[],java.lang.Object,java.lang.Object,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallStatus,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"toolCall(McpSchema.Tool, BiFunction<McpAsyncServerExchange, McpSchema.CallToolRequest, Mono<McpSchema.CallToolResult>>)","u":"toolCall(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"toolCall(McpSchema.Tool, BiFunction<McpSyncServerExchange, McpSchema.CallToolRequest, McpSchema.CallToolResult>)","u":"toolCall(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"toolCall(McpSchema.Tool, BiFunction<McpTransportContext, McpSchema.CallToolRequest, McpSchema.CallToolResult>)","u":"toolCall(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"toolCall(McpSchema.Tool, BiFunction<McpTransportContext, McpSchema.CallToolRequest, Mono<McpSchema.CallToolResult>>)","u":"toolCall(io.modelcontextprotocol.spec.McpSchema.Tool,java.util.function.BiFunction)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentContent","l":"ToolCallContentContent(AcpSchema.ContentBlock, String)","u":"%3Cinit%3E(org.eclipse.mcp.acp.protocol.AcpSchema.ContentBlock,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"ToolCallContentDiff(Map<String, Object>, String, String, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentTerminal","l":"ToolCallContentTerminal(String, String)","u":"%3Cinit%3E(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"toolCallId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"toolCallId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"toolCallId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"toolCallId()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"ToolCallLocation(Map<String, Object>, Integer, String)","u":"%3Cinit%3E(java.util.Map,java.lang.Integer,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"ToolCallUpdate(Map<String, Object>, AcpSchema.ToolCallContent[], AcpSchema.ToolKind, AcpSchema.ToolCallLocation[], Object, Object, AcpSchema.ToolCallStatus, String, String)","u":"%3Cinit%3E(java.util.Map,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallContent[],org.eclipse.mcp.acp.protocol.AcpSchema.ToolKind,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallLocation[],java.lang.Object,java.lang.Object,org.eclipse.mcp.acp.protocol.AcpSchema.ToolCallStatus,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ToolCapabilities","l":"ToolCapabilities(Boolean)","u":"%3Cinit%3E(java.lang.Boolean)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"tools()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"tools()"},{"p":"org.eclipse.mcp.platform","c":"Tools","l":"Tools()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.Builder","l":"tools(Boolean)","u":"tools(java.lang.Boolean)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"tools(List<McpServerFeatures.AsyncToolSpecification>)","u":"tools(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"tools(List<McpServerFeatures.SyncToolSpecification>)","u":"tools(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"tools(List<McpStatelessServerFeatures.AsyncToolSpecification>)","u":"tools(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"tools(List<McpStatelessServerFeatures.SyncToolSpecification>)","u":"tools(java.util.List)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"tools(McpServerFeatures.AsyncToolSpecification...)","u":"tools(io.modelcontextprotocol.server.McpServerFeatures.AsyncToolSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"tools(McpServerFeatures.SyncToolSpecification...)","u":"tools(io.modelcontextprotocol.server.McpServerFeatures.SyncToolSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"tools(McpStatelessServerFeatures.AsyncToolSpecification...)","u":"tools(io.modelcontextprotocol.server.McpStatelessServerFeatures.AsyncToolSpecification...)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"tools(McpStatelessServerFeatures.SyncToolSpecification...)","u":"tools(io.modelcontextprotocol.server.McpStatelessServerFeatures.SyncToolSpecification...)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.SyncSpec","l":"toolsChangeConsumer(Consumer<List<McpSchema.Tool>>)","u":"toolsChangeConsumer(java.util.function.Consumer)"},{"p":"io.modelcontextprotocol.client","c":"McpClient.AsyncSpec","l":"toolsChangeConsumer(Function<List<McpSchema.Tool>, Mono<Void>>)","u":"toolsChangeConsumer(java.util.function.Function)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"toResourceLink()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"toResourceLink()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"toResourceLink()"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"toResourceLink()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncCompletionSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncPromptSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncResourceSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.AsyncToolSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncCompletionSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncPromptSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncResourceSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpServerFeatures.SyncToolSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncCompletionSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncPromptSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncResourceSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.AsyncToolSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncCompletionSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncPromptSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncResourceSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.server","c":"McpStatelessServerFeatures.SyncToolSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Annotations","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.AudioContent","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CallToolResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Elicitation","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.RootCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities.Sampling","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ClientCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteArgument","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteContext","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.EmbeddedResource","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.GetPromptResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ImageContent","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.InitializeResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCNotification","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse.JSONRPCError","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JSONRPCResponse","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListPromptsResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourcesResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListResourceTemplatesResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListRootsResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ListToolsResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingMessageNotification","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelHint","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ModelPreferences","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PaginatedResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Prompt","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptArgument","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptMessage","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceResult","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SamplingMessage","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.CompletionCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.LoggingCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.PromptCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ResourceCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities.ToolCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ServerCapabilities","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SetLevelRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextContent","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Tool","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ToolAnnotations","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"toString()"},{"p":"io.modelcontextprotocol.spec","c":"McpStreamableServerSession.McpStreamableServerSessionInit","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AgentCapabilities","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Annotations","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioContent","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthenticateResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AuthMethod","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommand","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AvailableCommandInput","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CancelNotification","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ClientCapabilities","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.CreateTerminalResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResource","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtMethodResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ExtNotification","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.InitializeResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.KillTerminalCommandResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.LoadSessionResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.McpCapabilities","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ModelInfo","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.NewSessionResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PermissionOption","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Plan","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntry","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptCapabilities","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PromptResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReadTextFileResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ReleaseTerminalResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionOutcome","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.RequestPermissionResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentMessageChunk","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAgentThoughtChunk","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionAvailableCommandsUpdate","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionMode","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModelState","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeState","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionModeUpdate","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionPlan","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCall","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionToolCallUpdate","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionUserMessageChunk","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModelResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SetSessionModeResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StdioTransport","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalExitStatus","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextContent","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCall","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentContent","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentTerminal","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallLocation","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallUpdate","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"toString()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileResponse","l":"toString()"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"toString()"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Children","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Consoles","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editor","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Editors","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Problems","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Tasks","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextEditorSelection","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextReplacement","l":"toString()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TextSelection","l":"toString()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpMeta","l":"toString()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"AsyncElicitationSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.elicitation","c":"SyncElicitationSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.logging","c":"AsyncLoggingSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.logging","c":"SyncLoggingSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.progress","c":"AsyncProgressSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.progress","c":"SyncProgressSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"AsyncSamplingSpecification","l":"toString()"},{"p":"org.springaicommunity.mcp.method.sampling","c":"SyncSamplingSpecification","l":"toString()"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"toString(McpSchema.JSONRPCMessage)","u":"toString(io.modelcontextprotocol.spec.McpSchema.JSONRPCMessage)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"total()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ProgressNotification","l":"total()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"JsonParser","l":"toTypedObject(Object, Class<?>)","u":"toTypedObject(java.lang.Object,java.lang.Class)"},{"p":"org.eclipse.mcp.platform.resource","c":"ConsoleAdapter","l":"toUri()"},{"p":"org.eclipse.mcp.platform.resource","c":"EditorAdapter","l":"toUri()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"toUri()"},{"p":"org.eclipse.mcp.resource","c":"IResourceTemplate","l":"toUri()"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"trace()"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"trace(String, String)","u":"trace(java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"trace(String, String, Throwable)","u":"trace(java.lang.String,java.lang.String,java.lang.Throwable)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"traceDumpStack(String)","u":"traceDumpStack(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"traceEntry(String)","u":"traceEntry(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"traceEntry(String, Object)","u":"traceEntry(java.lang.String,java.lang.Object)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"traceEntry(String, Object[])","u":"traceEntry(java.lang.String,java.lang.Object[])"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"traceExit(String)","u":"traceExit(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"Tracer","l":"traceExit(String, Object)","u":"traceExit(java.lang.String,java.lang.Object)"},{"p":"io.modelcontextprotocol.server","c":"McpAsyncServerExchange","l":"transportContext()"},{"p":"io.modelcontextprotocol.server","c":"McpSyncServerExchange","l":"transportContext()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TerminalOutputResponse","l":"truncated()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteReference","l":"type()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Content","l":"type()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.JsonSchema","l":"type()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.PromptReference","l":"type()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.AudioBlock","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EmbeddedResourceBlock","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextBlock","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentContent","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentDiff","l":"type()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallContentTerminal","l":"type()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"type()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.ElicitationChoice","l":"type()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Marker","l":"type()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.StopReason","l":"UNKNOWN"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientSseClientTransport","l":"unmarshalFrom(Object, TypeReference<T>)","u":"unmarshalFrom(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.client.transport","c":"HttpClientStreamableHttpTransport","l":"unmarshalFrom(Object, TypeReference<T>)","u":"unmarshalFrom(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.client.transport","c":"StdioClientTransport","l":"unmarshalFrom(Object, TypeReference<T>)","u":"unmarshalFrom(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpTransport","l":"unmarshalFrom(Object, TypeReference<T>)","u":"unmarshalFrom(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"UnsubscribeRequest(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"UnsubscribeRequest(String, Map<String, Object>)","u":"%3Cinit%3E(java.lang.String,java.util.Map)"},{"p":"io.modelcontextprotocol.client","c":"McpAsyncClient","l":"unsubscribeResource(McpSchema.UnsubscribeRequest)","u":"unsubscribeResource(io.modelcontextprotocol.spec.McpSchema.UnsubscribeRequest)"},{"p":"io.modelcontextprotocol.client","c":"McpSyncClient","l":"unsubscribeResource(McpSchema.UnsubscribeRequest)","u":"unsubscribeResource(io.modelcontextprotocol.spec.McpSchema.UnsubscribeRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SessionNotification","l":"update()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"update(AcpSchema.SessionNotification)","u":"update(org.eclipse.mcp.acp.protocol.AcpSchema.SessionNotification)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"update(AcpSchema.SessionNotification)","u":"update(org.eclipse.mcp.acp.protocol.AcpSchema.SessionNotification)"},{"p":"org.eclipse.mcp.acp.view","c":"AcpBrowser","l":"updateSession(AcpSchema.SessionUpdate)","u":"updateSession(org.eclipse.mcp.acp.protocol.AcpSchema.SessionUpdate)"},{"p":"org.eclipse.mcp.acp.view.toolbar","c":"AbstractDynamicToolbarDropdown","l":"updateText(String)","u":"updateText(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.BlobResourceContents","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ReadResourceRequest","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContent","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceContents","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceReference","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourcesUpdatedNotification","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Root","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.SubscribeRequest","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.TextResourceContents","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.UnsubscribeRequest","l":"uri()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.BlobResourceContents","l":"uri()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageBlock","l":"uri()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ImageContent","l":"uri()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLink","l":"uri()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ResourceLinkBlock","l":"uri()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.TextResourceContents","l":"uri()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.Console","l":"uri()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.File","l":"uri()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpComplete","l":"uri()"},{"p":"org.springaicommunity.mcp.annotation","c":"McpResource","l":"uri()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Resource.Builder","l":"uri(String)","u":"uri(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceLink.Builder","l":"uri(String)","u":"uri(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ResourceTemplate","l":"uriTemplate()"},{"p":"io.modelcontextprotocol.server","c":"McpServer.AsyncSpecification","l":"uriTemplateManagerFactory(McpUriTemplateManagerFactory)","u":"uriTemplateManagerFactory(io.modelcontextprotocol.util.McpUriTemplateManagerFactory)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessAsyncSpecification","l":"uriTemplateManagerFactory(McpUriTemplateManagerFactory)","u":"uriTemplateManagerFactory(io.modelcontextprotocol.util.McpUriTemplateManagerFactory)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.StatelessSyncSpecification","l":"uriTemplateManagerFactory(McpUriTemplateManagerFactory)","u":"uriTemplateManagerFactory(io.modelcontextprotocol.util.McpUriTemplateManagerFactory)"},{"p":"io.modelcontextprotocol.server","c":"McpServer.SyncSpecification","l":"uriTemplateManagerFactory(McpUriTemplateManagerFactory)","u":"uriTemplateManagerFactory(io.modelcontextprotocol.util.McpUriTemplateManagerFactory)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpTransport","l":"url()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.SseTransport","l":"url()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Role","l":"user"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Role","l":"USER"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletSseServerTransportProvider","l":"UTF_8"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStatelessServerTransport","l":"UTF_8"},{"p":"io.modelcontextprotocol.server.transport","c":"HttpServletStreamableServerTransportProvider","l":"UTF_8"},{"p":"io.modelcontextprotocol.util","c":"Utils","l":"Utils()","u":"%3Cinit%3E()"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"valid()"},{"p":"io.modelcontextprotocol.spec","c":"DefaultJsonSchemaValidator","l":"validate(Map<String, Object>, Map<String, Object>)","u":"validate(java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator","l":"validate(Map<String, Object>, Map<String, Object>)","u":"validate(java.util.Map,java.util.Map)"},{"p":"io.modelcontextprotocol.spec","c":"JsonSchemaValidator.ValidationResponse","l":"ValidationResponse(boolean, String, String)","u":"%3Cinit%3E(boolean,java.lang.String,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteRequest.CompleteArgument","l":"value()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.EnvVariable","l":"value()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.HttpHeader","l":"value()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.DEPTH","l":"value()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.ContextInclusionStrategy","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.StopReason","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Action","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Role","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryPriority","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Role","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallStatus","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.DEPTH","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.PRIORITY","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.SEVERITY","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback.ContentType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReturnMode","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap.ReferenceType","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"SpringAiSchemaModule.Option","l":"valueOf(String)","u":"valueOf(java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CompleteResult.CompleteCompletion","l":"values()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageRequest.ContextInclusionStrategy","l":"values()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.CreateMessageResult.StopReason","l":"values()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.ElicitResult.Action","l":"values()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"values()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Role","l":"values()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryPriority","l":"values()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.PlanEntryStatus","l":"values()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.Role","l":"values()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.StopReason","l":"values()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolCallStatus","l":"values()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.ToolKind","l":"values()"},{"p":"org.eclipse.mcp.internal","c":"Tracer.OPTION","l":"values()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.DEPTH","l":"values()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.PRIORITY","l":"values()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.SEVERITY","l":"values()"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.TYPE","l":"values()"},{"p":"org.springaicommunity.mcp.method.resource","c":"AbstractMcpResourceMethodCallback.ContentType","l":"values()"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReturnMode","l":"values()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap.ReferenceType","l":"values()"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"SpringAiSchemaModule.Option","l":"values()"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.Implementation","l":"version()"},{"p":"org.springaicommunity.mcp.method.tool","c":"ReturnMode","l":"VOID"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitRequest","l":"WaitForTerminalExitRequest(Map<String, Object>, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WaitForTerminalExitResponse","l":"WaitForTerminalExitResponse(Map<String, Object>, Integer, String)","u":"%3Cinit%3E(java.util.Map,java.lang.Integer,java.lang.String)"},{"p":"io.modelcontextprotocol.spec","c":"McpSchema.LoggingLevel","l":"WARNING"},{"p":"org.eclipse.mcp.platform.resource","c":"ResourceSchema.SEVERITY","l":"WARNING"},{"p":"org.springaicommunity.mcp.method.tool.utils","c":"ConcurrentReferenceHashMap.ReferenceType","l":"WEAK"},{"p":"org.eclipse.mcp.acp.view.actions","c":"ModelToolbarSelector","l":"widgetDefaultSelected(SelectionEvent)","u":"widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent)"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"widgetDefaultSelected(SelectionEvent)","u":"widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent)"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"widgetDefaultSelected(SelectionEvent)","u":"widgetDefaultSelected(org.eclipse.swt.events.SelectionEvent)"},{"p":"org.eclipse.mcp.acp.view.actions","c":"ModelToolbarSelector","l":"widgetSelected(SelectionEvent)","u":"widgetSelected(org.eclipse.swt.events.SelectionEvent)"},{"p":"org.eclipse.mcp.internal.preferences","c":"AcpGeneralPreferencePage","l":"widgetSelected(SelectionEvent)","u":"widgetSelected(org.eclipse.swt.events.SelectionEvent)"},{"p":"org.eclipse.mcp.internal.preferences","c":"McpGeneralPreferencePage","l":"widgetSelected(SelectionEvent)","u":"widgetSelected(org.eclipse.swt.events.SelectionEvent)"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"WorkspaceResourceAdapter()","u":"%3Cinit%3E()"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"WorkspaceResourceAdapter(IResource)","u":"%3Cinit%3E(org.eclipse.core.resources.IResource)"},{"p":"org.eclipse.mcp.platform.resource","c":"WorkspaceResourceAdapter","l":"WorkspaceResourceAdapter(String)","u":"%3Cinit%3E(java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.FileSystemCapability","l":"writeTextFile()"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpClient","l":"writeTextFile(AcpSchema.WriteTextFileRequest)","u":"writeTextFile(org.eclipse.mcp.acp.protocol.AcpSchema.WriteTextFileRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"IAcpClient","l":"writeTextFile(AcpSchema.WriteTextFileRequest)","u":"writeTextFile(org.eclipse.mcp.acp.protocol.AcpSchema.WriteTextFileRequest)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileRequest","l":"WriteTextFileRequest(Map<String, Object>, String, String, String)","u":"%3Cinit%3E(java.util.Map,java.lang.String,java.lang.String,java.lang.String)"},{"p":"org.eclipse.mcp.acp.protocol","c":"AcpSchema.WriteTextFileResponse","l":"WriteTextFileResponse(Map<String, Object>)","u":"%3Cinit%3E(java.util.Map)"}];updateSearchResults();